[{"body":"Preparation Installing TezBake CLI and using it to setup your Tezos baker is very simple. You will need the following tools:\nSpare computer or existing computer with Linux installed. The recommended requirements are provided by Nomadic Labs 3 CPU cores (arm64 or amd64/x86-64 architectures) – 2 are needed by the Octez node and 1 is needed by the Octez baker; 8GB RAM + 8GB swap (or 16GB RAM); 100GB SSD storage (or similar I/O performance); a low-latency, reliable broadband internet connection. Ledger Nano S Plus or Nano X hardware wallet with Tezos Wallet \u0026 Baker apps installed. It’s necessary to use Ledger Live to install the Tezos Wallet \u0026 Baking applications; to install the latter you must enable developer mode in Ledger Live settings\nAbsolutely ensure you have properly configured the Ledger device settings so the device doesn’t lock 10 minutes after inactivity. This is a common issue that can cause your baker to stop baking. Remove the Ledger wallet app from your baking device after you’ve finished setting up your baker. This is a security measure to prevent unauthorized access to your baker. You can always reinstall the app when you need to use the Ledger for baking or other purposes.\nInstallation Download and copy tezbake To begin, run the script below, which will download the latest version of TezBake and copy it to your /usr/sbin directory. This script works with both x86_64 and arm64 architectures.\nwget -q https://github.com/tez-capital/tezbake/raw/main/install.sh -O /tmp/install.sh \u0026\u0026 sudo sh /tmp/install.sh # you may be prompted for sudo password Setup Tezos node, signer and install tezbake dependencies tezbake setup -a # you may be prompted for sudo password Bootstrap Tezos node At this stage, it’s necessary to bootstrap your node, meaning to download a copy of the blockchain so you don’t have to synchronize block-by-block, which takes hours at best.\ntezbake bootstrap-node \u003curl\u003e \u003cblock_hash\u003e # example: tezbake bootstrap-node https://snapshots.eu.tzinit.org/mainnet/rolling BL8Vq12HX6MJWkB6RLgQAYRKpKZ5fyMoLpWzAoQ6mh55gkKHiQU You can replace eu above with us or asia if you prefer to use a different mirror closer to you.\nGet the block hash and block level from the snapshot provider’s website: https://snapshots.eu.tzinit.org/mainnet/rolling.html\nThe \u003cblock_hash\u003e argument is optional but encouraged. If you don’t want to borther with this protection, use the second method below which will also be faster.\nVerify the hash/checksum provided by the snapshot provider to ensure the snapshot is valid. You can find the correct hashes for all blocks on Tezos blockchain explorers such as: https://tzkt.io/blocks https://tzstats.com/\nSimply search for the block level in the search field and verify the hash of the block matches the hash provided by the snapshot provider.\nStart Tezos node After importing the snapshot, you need to start your node and wait until it’s fully synchronized before importing your Ledger key.\ntezbake start After starting the node, run the following command over and over every few minutes and monitor the “level” displayed.\ntezbake info Level refers to the latest block number on mainnet. Navigate to https://tzkt.io or https://tzstats.com and observe the latest block. Once the level in your command matches the latest block on your blockchain explorer, your node is in full sync and you can keep following the steps below.\nBoth https://tzkt.io or https://tzstats.com provide Ghostnet and Testnet block explorers as well. Make sure you’re looking at the right explorer.\nImport Ledger key or soft key and register as baker Now that your node is in full sync, you can proceed with the most important part: (1) your baker parameters import into your baker node and (2) submit your baker registration on the blockchain.\nYou have the option to use the secure Ledger hardware wallet or simply use a local, unencrypted software key (a.k.a. soft key). The secure Ledger hardware wallet is the recommended option for mainnet baking.\nYou will have to first fund your baker address with enough tez (6000 minimum) to cover the bond requirement. You can do this by sending tez from your main account or exchange to the baker address.\n(Option 1 - RECOMMENDED) Import Ledger key to TezBake signer tezbake setup-ledger --platform --import-key --authorize --hwm 1 # If you have a custom derivation path, you can specify it as shown: (`--import-key=\"ed25519/0h/0h\"`; change ed to bip as needed for your individual needs; the default is ed25519/0h/0h which works just fine) # `--hwm 1` works great if you're setting up for the first time. If you're setting up a device that's been used to bake before, you want to change this (`1`) to the current block height on the blockchain for your safety. # If you're importing for the second time after already trying again but failing, you can use `--force` to force the import. Once imported, you can see your baker address by running tezbake info\nThe ledger will ask you twice to confirm this operation. Make sure the baker you see on the ledger screen matches the one you want to use. If you don’t have this information yet, don’t worry. To get the address of the ledger that’s used by default simply go to https://kukai.app and login with ledger, accepting the default derivation path.\nBLS (i.e. bip) signatures are designed to offer greater flexibility and scalability for certain applications compared to the default ED25519 algorithm.\nPutting the baker on a non-default derivation path provides an additional layer of security for your baker at the cost of extra complexity for you. Make sure your setup is clearly documented for your own records.\nIf your device was used to bake before it might have a “high watermark” aka HWM. If you try to use this device on a testnet, it will not work because the block height on test networks usually starts with 1 while mainnet is up to over a couple of million blocks at the time of writing. If you used to bake on mainnet with the same ledger as you’re trying to use now but it’s been a while, it’s highly recommended to change the 1 above to the current block on the network that will be used for the device going forward.\nThe watermark is simply a record of the lack block number your ledger helped to bake or attest. If you’re setting up a brand new device that’s not been used for baking before, there is no need to alter the default command above.\nAlways make sure you’re not accidentally going to double bake by using your production ledger and/or setup to bake on a testnet. It’s really easy to make this mistake and the only thing preventing it are your personal standard operating procedures, the documentation you keep, and the care you take when setting up your baker.\nTo double bake or attest due to baker setup error means having 2 different bakers with the same key on the same network. This is a serious offense and can lead to loss of bond and other penalties. Always double-check your setup and make sure you’re not accidentally double baking or attesting.\n(Option 2 - INSECURE) Import Soft key to TezBake signer First, generate the baker key for TezBake signer:\ntezbake signer - gen keys baker Make sure to backup your key in a secure location. You can get the key by running the following command:\ncat /bake-buddy/signer/data/.tezos-signer/secret_keys Then, import the baker public key hash to TezBake node:\nGet the tz1-tz3 address which is the hashed public key of the baker key:\ncat /bake-buddy/signer/data/.tezos-signer/public_key_hashs Import the hashed key to the TezBake node:\ntezbake node client import secret key baker http://127.0.0.1:20090/tz1bcSYEMKBoMnsACXzixn5bmzcdYjagqjZF Change the tz1bcSYEMKBoMnsACXzixn5bmzcdYjagqjZF to the hashed key you got from the previous command.\nRegister Ledger key as baker on the blockchain For this step your node level must be synced with the latest block on the blockchain explorer. You must also temporarily open your Ledger Tezos Wallet app to register your key as a baker (note: as well as when voting). For all other baker operations, you must use the Tezos Baking app.\ntezbake register-key Registering is not necessary if this is already an active baker ledger which is being setup on some kind of failover machine or in a situation where it has not been over 2 weeks of baking inactivity.\nRegistering applies to new bakers and to inactive bakers. If you’re setting up a new baker, you must register it. If you’re setting up a baker that’s been inactive for over 2 weeks, you must register it. If you’re setting up a baker that’s been inactive for less than 2 weeks, you don’t need to register it. The best way to find out if you need to register your baker again is to look into your baking rights schedule and see if they stopped coming in. If they did, you need to register your baker again.\nAny questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"Preparation Installing TezBake CLI and using it to setup your Tezos baker is very simple. You will need the following tools:\nSpare computer or existing computer with Linux installed. The recommended …","ref":"/tezbake/tutorials/how-to-bake/","tags":"","title":"\u003e How to Bake"},{"body":"Preparation There is minimal preparation needed to utilize TezPay, assuming that you have a functioning public baker running.\nPreparation Summary\nCreate a directory (folder) on your desktop (or appropriate location) to store the application files and required config files Download the Tezpay software, sample configuration, and payout wallet files from github Create a ‘pay-out’ wallet and store the private key (not baker or hot wallet) Preparation: Step 1 Create TezPay Directory Create a new folder on the desktop or in a location that you want to store the necessary files for Tezpay.\nThis folder will eventually contain 3 files:\nTezPay Application File Configuration File Private-Key File The TezPay Application File will execute the commands that will run TezPay, the Configuration File will essentially tell the application file how to run and will be edited by the baker (we will cover this later), and the Private-Key File will contain the private key for a wallet you have designated to pay your delegators (we will explain an easy way to get this later as well). A note on the Private-key file - it is not recommended to use an existing wallet that may house important assets (including NFT’s or crypto tokens) but to create a new wallet that contains only enough Tezos to pay out delegates.\nPreparation: Step 2 Download Files Download the software from Github using the link: https://github.com/alis-is/tezpay/releases. In this repository, select the correct operating system and system architecture (arm64 or amd64). For this example we will be using arm64\nNote: If you do not know the system architecture you can find out by opening a Terminal and executing the command uname -m, and this will return the system architecturearm64 or amd64.\nThe example below displays arm64\nIf you would rather utilize CLI to download the application you will need to change directory (cd) to the TezPay directory created in step 1 in the terminal, then use command wget -q https://raw.githubusercontent.com/alis-is/tezpay/main/install.sh -O /tmp/install.sh \u0026\u0026 sh /tmp/install.sh\nSee example code below (note: input begins after last ‘%’ character):\nThe above example is an alternative to downloading from the GitHub repository\nNext, you will download the sample configuration file \u0026 payout_wallet_private.sample.key file from : https://github.com/alis-is/tezpay/blob/main/docs/configuration/ - or you can open file in GitHub and copy text to a text editor.\nNote, there are two choices for the configuration files:\nSimple Config file : config.default.hjson (basic arguments to run Tezpay) Full Config: config.sample.hjson (advanced arguements to run Tezpay) Preparation: Step 3 - Payout Wallet (optional) Lastly, you will need to download the create a new wallet and retrieve the private key. We will be using the Temple Wallet extension to create a new wallet and to get the private key. If you already have a payout wallet, or know how, skip this section.\nFirst, open Temple Wallet and select the icon in upper right Next, select ’new account’, and input a new (ie Tezpay1) Then, click the icon in the upper right again Then, go to Settings Then, go to Reveal Private Key Then, you will be prompt to input your password for the account Your private key will be displayed here:\nSetup The next section will review the setup needed for Tezpay. We will review the Configuration File and Payout Wallet files. In this section we will review:\nConfiguration File (simple) Configuration File (advanced) Private-Key File Setup: Step 1a: Configuration File (simple) This section will review how to setup the configuration file (simple-version) to be used by the TezPay application.\n*Note: must have file name config.hjson, case-sensitive *\nIf you’ve used json before but now hjson, you can read more about it here: https://hjson.github.io/\nYellow is areas you will input data/edit fields\nBlue are comments about Configuration File objects\nPaste your Baker wallet in between the quotes Set your Baker fee (ie 0.05 = 5% fee) Input minimum payout for delegators (ie. 1 = 1 XTZ) This section allows you to split payments for baking (Bonds) and fees from delegators (Fees) if you want - input Baker wallet address and percentage to split. This example does not split, where 1=100% to baker wallet. This section refers to network parameters to fetch information about the baker in order to compile rewards and payouts - Do not edit unless you are an experienced user Over delegation projection prohibits you from over paying beyond your delegation limit - Do not edit unless you are an experience user This is as basic configuration file for running the TezPay application. The next section will review the advanced configuration file, giving more options and customization to the TezPay application. A user may splice sections from the advanced file to the simple to build a custom file as well - but should be done by experienced users.\nSetup: Step 1b: Configuration File (advanced) This section will review how to setup the configuration file (advanced-version) to be used by the TezPay application.\n*Note: must have file name config.hjson, case-sensitive *\nYellow is areas you will input data/edit fields Blue are comments about Configuration File objects\nThe example below is a more advanced configuration file that showcases several of the features that can be used to customize the TezPay application. To get a simple configuration file, you can remove the sections that are not needed. Here is a sample configuration that will work for 90% of bakers: (TezPay Starter Configuration)[https://docs.tez.capital/tezpay/configuration/examples/starter/]\nPaste your Baker wallet in between the quotes Set your Baker fee (ie 5% = 0.05) Input minimum payout for delegators (ie. 1 = 1 XTZ) Input minimum staking balance for delegators Input delegators wallets that you wish to ignore completely (not often used) Overrides: These will override global settings for delegators - you may delete/remove specific fields where you want to ignore Input wallet address for specific delegator you wish to apply overrides for Input a delegator-specific custom fee (ie 0.5% = 0.005) Input either true or false where true removes the fee from delegator, and false applies the fee specified in the line above Input minimum balance override for specified wallet\\ If you wish to add multiple wallets for over rides, add another wallet following same format keeping the { } to contain the wallet attribute as shown. This section allows you to split payments for baking (Bonds), input wallet address and percentage to allocate (see example above for structure of more than 1 wallet. 100%=1.00 This section allows you to split payments for fees collected (Fees), input wallet address and percentage to allocate (see example above for structure of more than 1 wallet. 100%=1.00 Donations refer to donating a specific amount of XTZ to wallets every payout Input a donation amount in donate field as a percentage (ie 2.5% = 0.025) Input wallets that you wish to donate to and percentage for each (ie 100% = 1.0) This section refers to network parameters to fetch information about the baker in order to compile rewards and payouts Do not edit unless you are an experienced user Over delegation projection prohibits you from over paying beyond your delegation limit Do not edit unless you are an experience user This section allows for automatic notifications/messages to be sent to specific platforms in order to broadcast messages (ie ‘Bakery has paid 100XTZ in rewards for latest cycle’ We will cover this in a separate section see appendix X and platforms supported are Twitter, Discord, and E-mail Setup: Step 2: Private-Key File The Private Key file is used to sign the transaction(s) that will payout the rewards. From a security perspective, it is recommended NOT to use the Baker private key due to security concerns with the private key being displayed in plain-text in a file. This section will use the new account and private-key that was acquired in Step 3 - Payout Wallet.\nRetrieve the private-key of the wallet you wish to use from the payout wallet of your choice Paste into a text file (or replace the example that was downloaded from the GitHub repository Save the file with exact file name and extension payout_wallet_private.key - note: the .key is required in this instance (see below) Setup: Summary At this point there should be 3 files in the directory tezpay. These three files will be used to run the application and payouts.\nAny questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"Preparation There is minimal preparation needed to utilize TezPay, assuming that you have a functioning public baker running.\nPreparation Summary\nCreate a directory (folder) on your desktop (or …","ref":"/tezpay/tutorials/how-to-setup/","tags":"","title":"\u003e How to Setup"},{"body":"Preparation Setting up TezWatch currently requires you to have a https://Discord.com account. If you don’t have one, please create one before proceeding.\nYou will also need to join our Discord. This is where you will configure TezWatch. You can also ask questions and get support from the Tez Capital team and other Tezos bakers, stakers and delegators. After you join, make sure to self-select the “TezBake” role in order to get access to the #tezwatch channel.\nThe idea here is to have the Discord mobile app on your phone and/or the Discord desktop app on your computer. You will need to be logged in to your Discord account on the device you want to receive notifications on. TezWatch will use Discord to tag you in a DM (Direct Message) based on your configuration. For example, you may not care if you miss a single attestation but you care if you miss 10 attestation in a row or a block.\nIf you want to remain anonymous, you can create a new Discord account and join our Discord server using that account. Then you can DM the TezWatch bot from that account and what with it in private.\nSetup and configuration of baker performance monitoring The whole setup and configuration process currently takes very little time as the features are limited. We are working on adding more features and more platforms. If you have any suggestions, please let us know on Discord or Telegram.\nThe setup is done using slash commands, which means just type the / character in the chat in the #tezwatch channel and you will see a list of available commands for the TezWatch bot.\nTo get all “sources” and “events” use the /events command\nHere are the descriptions of all the key variables you will need to configure to monitor baker performance:\nVariable Available Options Description source staking or chain The general area of interest. staking is related to activities that validate on the chain and chain is related to general chain progression event attested-block, baked-block, missed-block, missed-attestation, new-block These are the specific staking events that you’re interested in being notified for. Each event has its own unique subscription tier. All missed* ones are TIER 0 or FREE conditions tz1UGkfyrT9yBt6U5PV7Qeui3pt3a8jffoWv,tz1S5WxdZR5f9NzsPXhr7L9L1vrEb5spZFur This is a comma-separated list of Tezos addresses that you want to be notified for Please note that some TezWatch features are considered premium and will in the future require a subscription. The freemium features indicated as TIER 0 will always be available for free to the Tezos ecosystem.\nExample Here’s an example command to subscribe to notifications for a missed attestation or missed block for a specific baker:\nAny questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"Preparation Setting up TezWatch currently requires you to have a https://Discord.com account. If you don’t have one, please create one before proceeding.\nYou will also need to join our Discord. This …","ref":"/tezwatch/tutorials/how-to-setup/","tags":"","title":"\u003e How to Setup"},{"body":"Tezos proposal voting The Tezos proposal process consists of 5 stages, each of which lasts for 5 cycles (~14 days). Briefly, the proposal process is as follows:\nProposal. If no proposal gets more than 5% of the state to vote for it, the proposal process repeats indefinitely. As soon as a proposal gets 5% of the state to vote for it, the proposal process moves to the next stage. In cases where there are multiple 5%+ proposals on the table, the proposal with the most votes wins. Exploration Proposal needs to hit quorum (around 50% of all stake voting in some way) and it needs to further hit an acceptance level of 80%+. If it fails to meet these thresholds, the process resets back to the Proposal stage. Cooldown The proposal is tested on a dedicated test network to make sure it migrates and runs. Dapp developers make sure this proposal doesn’t break their dapps. Promotion Proposal needs to hit quorum (around 50% of all stake voting in some way) and it needs to further hit an acceptance level of 80%+. If it fails to meet these thresholds, the process resets back to the Proposal stage. Adoption The proposal is officially accepted and goes into effect at the end of the Adoption stage. The Ghostnet test network is upgraded as a final test before Mainnet adoption. Dapp developers make sure this proposal doesn’t break their dapps and make any necessary changes to their dapps. We recommend you read more about the Tezos Voting process here: https://tezos.gitlab.io/active/voting.html\nProposal voting with TezGov TezGov allows you to participate in Tezos proposal voting with your Ledger hardware wallet.\nWe recommend using a secondary Ledger device with the same seed, to vote with while your primary device is baking. You can also briefly unplug your primary Ledger baking device and use it on a different computer just for voting purposes (use the wallet app to vote), then immediately plugging it back into the primary device, opening the baking app and resuming baking only. If your baking computer itself has a graphical interface, you can briefly switch to the wallet app on your Ledger device and vote, then switch back to the baking app and resume baking only. In order to vote using your Ledger device, you must have the Tezos wallet app installed and open on your Ledger device. If you have the baking app open, you will not be able to vote\nTezGov Web Portal TezGov Web Portal: https://gov.tez.capital\nLog into the TezGov portal by using the most secure method available to you.\nWe highly recommend using the direct Ledger login at the top. This method allows you to see the specific details of your vote on your Ledger screen. Use the Remote (signer) method if you have a signer somewhere on your LAN or local computer. This is an option for advanced users. Use the Beacon method if you are using a Beacon enabled wallet like Temple or Kukai. In this case you will not see the exact details of your vote on your Ledger screen and you will instead be asked to sign an arbitrary blob message. This method also works fine but it is inherently less secure than the direct Ledger method Once logged in you’ll see the TezGov home screen. You can see the current cycle, the current proposal, the current voting period, and the current voting period progress. You can also see the current proposal status and the current proposal details.\nExploration and Promotion Periods During the exploration and promotion periods you will see the period name Exploration or Promotion in the middle of the page. You can vote for the current proposal by clicking the NAY, PASS or YAY buttons.\nYou will be asked to confirm the vote on your Ledger device.\nOnce confirmed, the page will refresh within 30 seconds.\nAfter finished, you’ll be able to click on the confirmation link for your vote.\nCooldown Period During the cooldown period you will period name Cooldown in the middle of the page and you will not be able to vote until the next period. The time remaining is also reflected on the page.\nAny questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"Tezos proposal voting The Tezos proposal process consists of 5 stages, each of which lasts for 5 cycles (~14 days). Briefly, the proposal process is as follows:\nProposal. If no proposal gets more than …","ref":"/tezgov/tutorials/how-to-vote/","tags":"","title":"\u003e How to Vote"},{"body":"Getting Started with Tezos Baking Baking on Tezos refers to the act of validating and producing blocks on the Tezos blockchain. Baking is suited for individuals at home as well as companies in their on-premise data centers, and cloud providers.\nAt this time the TezBake software focuses on indivudals and companies baking on premise in their homes and own data centers. We do not support baking on cloud providers at this time. We support the most secure on-premise baking method which involves dedicating a small form factor computer to baking with a Ledger Nano S or Nano S Plus hardware wallet as the key storage device. This setup is inexpensive, widely available, and very secure. It does not require a very fast internet connection. It is also very easy to setup and maintain with TezBake.\nThere is never any stake slashing on Tezos in the event of a hardware failure. You will merely not receive rewards for the period of time that the baking computer is down.\nAll blocks that you must bake are scheduled around 5-6 days in advance. You must be operational during the exact times of your block to receive rewards. There is no punishment for missing some of your endorsements as long as you are able to successfully endorse 67% of your endorsements each cycle, every 2.8 days.\nGetting Started ","categories":"","description":"","excerpt":"Getting Started with Tezos Baking Baking on Tezos refers to the act of validating and producing blocks on the Tezos blockchain. Baking is suited for individuals at home as well as companies in their …","ref":"/getting-started/","tags":"","title":"Getting Started with Baking"},{"body":"Ghostnet Ghostnet is Tezos’ perpetual testnet. In the context of TezBake, Ghostnet is intended to provide a no-consequences testing environment where you can learn how to properly bake and pay using TezBake and TezPay. It’s highly recommended for all serious bakers to have a Ghostnet setup running, to help test protocol migrations.\nPreparation Installing TezBake CLI and using it to setup your Tezos baker is very simple. You will need the following tools:\nSpare computer or existing computer with Linux installed. We recommend Ubuntu Linux. You must have an SSD drive or better \u0026 at least 8GB RAM\nLedger Nano S hardware wallet with Tezos Wallet \u0026 Baker apps installed. It’s necessary to use Ledger Live to install the Tezos Wallet \u0026 Baking applications; to install the latter you must enable developer mode in Ledger Live settings\nAbsolutely ensure you have properly configured the Ledger device settings so the device doesn’t lock 10 minutes after inactivity. This is a common issue that can cause your baker to stop baking. Remove the Ledger wallet app from your baking device after you’ve finished setting up your baker. This is a security measure to prevent unauthorized access to your baker. You can always reinstall the app when you need to use the Ledger for baking or other purposes.\nInstallation Download and copy tezbake To begin, run the script below, which will download the latest version of TezBake and copy it to your /usr/sbin directory. This script works with both x86_64 and arm64 architectures.\nwget -q https://github.com/tez-capital/tezbake/raw/main/install.sh -O /tmp/install.sh \u0026\u0026 sudo sh /tmp/install.sh # you may be prompted for sudo password Setup Tezos node, signer and install tezbake dependencies tezbake setup -a --node-configuration=https://raw.githubusercontent.com/tez-capital/xtz.configs/main/ghostnet.json # you may be prompted for sudo password Bootstrap Tezos node At this stage, it’s necessary to bootstrap your node, meaning to download a copy of the blockchain so you don’t have to synchronize block-by-block, which takes hours at best.\ntezbake bootstrap-node \u003curl\u003e \u003cblock_hash\u003e # example: tezbake bootstrap-node https://snapshots.eu.tzinit.org/ghostnet/rolling BL8Vq12HX6MJWkB6RLgQAYRKpKZ5fyMoLpWzAoQ6mh55gkKHiQU You can replace eu above with us or asia if you prefer to use a different mirror closer to you.\nGet the block hash and block level from the snapshot provider’s website: https://snapshots.eu.tzinit.org/ghostnet/rolling.html\nThe \u003cblock_hash\u003e argument is optional but encouraged. If you don’t want to borther with this protection, use the second method below which will also be faster.\nVerify the hash/checksum provided by the snapshot provider to ensure the snapshot is valid. You can find the correct hashes for all blocks on Tezos blockchain explorers such as: https://tzkt.io/blocks https://tzstats.com/\nSimply search for the block level in the search field and verify the hash of the block matches the hash provided by the snapshot provider.\nStart Tezos node After importing the snapshot, you need to start your node and wait until it’s fully synchronized before importing your Ledger key.\ntezbake start After starting the node, run the following command over and over every few minutes and monitor the “level” displayed.\ntezbake info Level refers to the latest block number on mainnet. Navigate to https://tzkt.io or https://tzstats.com and observe the latest block. Once the level in your command matches the latest block on your blockchain explorer, your node is in full sync and you can keep following the steps below.\nBoth https://tzkt.io or https://tzstats.com provide Ghostnet and Testnet block explorers as well. Make sure you’re looking at the right explorer.\nImport Ledger key or soft key and register as baker Now that your node is in full sync, you can proceed with the most important part: (1) your baker parameters import into your baker node and (2) submit your baker registration on the blockchain.\nYou have the option to use the secure Ledger hardware wallet or simply use a local, unencrypted software key (a.k.a. soft key). The secure Ledger hardware wallet is the recommended option for mainnet baking.\nYou will have to first fund your baker address with enough tez (6000 minimum) to cover the bond requirement. You can do this by sending tez from your main account or exchange to the baker address.\n(Option 1 - RECOMMENDED) Import Ledger key to TezBake signer tezbake setup-ledger --platform --import-key --authorize --hwm 1 # If you have a custom derivation path, you can specify it as shown: (`--import-key=\"ed25519/0h/0h\"`; change ed to bip as needed for your individual needs; the default is ed25519/0h/0h which works just fine) # `--hwm 1` works great if you're setting up for the first time. If you're setting up a device that's been used to bake before, you want to change this (`1`) to the current block height on the blockchain for your safety. # If you're importing for the second time after already trying again but failing, you can use `--force` to force the import. Once imported, you can see your baker address by running tezbake info\nThe ledger will ask you twice to confirm this operation. Make sure the baker you see on the ledger screen matches the one you want to use. If you don’t have this information yet, don’t worry. To get the address of the ledger that’s used by default simply go to https://kukai.app and login with ledger, accepting the default derivation path.\nBLS (i.e. bip) signatures are designed to offer greater flexibility and scalability for certain applications compared to the default ED25519 algorithm.\nPutting the baker on a non-default derivation path provides an additional layer of security for your baker at the cost of extra complexity for you. Make sure your setup is clearly documented for your own records.\nIf your device was used to bake before it might have a “high watermark” aka HWM. If you try to use this device on a testnet, it will not work because the block height on test networks usually starts with 1 while mainnet is up to over a couple of million blocks at the time of writing. If you used to bake on mainnet with the same ledger as you’re trying to use now but it’s been a while, it’s highly recommended to change the 1 above to the current block on the network that will be used for the device going forward.\nThe watermark is simply a record of the lack block number your ledger helped to bake or attest. If you’re setting up a brand new device that’s not been used for baking before, there is no need to alter the default command above.\nAlways make sure you’re not accidentally going to double bake by using your production ledger and/or setup to bake on a testnet. It’s really easy to make this mistake and the only thing preventing it are your personal standard operating procedures, the documentation you keep, and the care you take when setting up your baker.\nTo double bake or attest due to baker setup error means having 2 different bakers with the same key on the same network. This is a serious offense and can lead to loss of bond and other penalties. Always double-check your setup and make sure you’re not accidentally double baking or attesting.\n(Option 2 - INSECURE) Import Soft key to TezBake signer First, generate the baker key for TezBake signer:\ntezbake signer - gen keys baker Make sure to backup your key in a secure location. You can get the key by running the following command:\ncat /bake-buddy/signer/data/.tezos-signer/secret_keys Then, import the baker public key hash to TezBake node:\nGet the tz1-tz3 address which is the hashed public key of the baker key:\ncat /bake-buddy/signer/data/.tezos-signer/public_key_hashs Import the hashed key to the TezBake node:\ntezbake node client import secret key baker http://127.0.0.1:20090/tz1bcSYEMKBoMnsACXzixn5bmzcdYjagqjZF Change the tz1bcSYEMKBoMnsACXzixn5bmzcdYjagqjZF to the hashed key you got from the previous command.\nRegister Ledger key as baker on the blockchain For this step your node level must be synced with the latest block on the blockchain explorer. You must also temporarily open your Ledger Tezos Wallet app to register your key as a baker (note: as well as when voting). For all other baker operations, you must use the Tezos Baking app.\ntezbake register-key Registering is not necessary if this is already an active baker ledger which is being setup on some kind of failover machine or in a situation where it has not been over 2 weeks of baking inactivity.\nRegistering applies to new bakers and to inactive bakers. If you’re setting up a new baker, you must register it. If you’re setting up a baker that’s been inactive for over 2 weeks, you must register it. If you’re setting up a baker that’s been inactive for less than 2 weeks, you don’t need to register it. The best way to find out if you need to register your baker again is to look into your baking rights schedule and see if they stopped coming in. If they did, you need to register your baker again.\nAny questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"Ghostnet Ghostnet is Tezos’ perpetual testnet. In the context of TezBake, Ghostnet is intended to provide a no-consequences testing environment where you can learn how to properly bake and pay using …","ref":"/tezbake/tutorials/how-to-bake-ghostnet/","tags":"","title":"How to Bake on Ghostnet"},{"body":"Preparation For this tutorial, you’ll need to have already have installed Docker as shown here: https://docs.docker.com/engine/install\nPull and Execute the TezBake Docker Image Pull the TezBake Docker Image sudo docker pull ghcr.io/tez-capital/tezbake:latest-alpinetezbake setup --peak Setup TezBake Container sudo docker run --name tezbake-container --privileged -d ghcr.io/tez-capital/tezbake:latest-alpine After this step, you will need to wait a while for the container to start up and bootstrap the Tezos node.\nYou can monitor the progress of the Tezos node bootstrapping by running the following command:\nsudo docker logs -f tezbake-container Once the Tezos node has finished bootstrapping, you can connect into the container and either import your Ledger wallet or create a new soft wallet.\nConnect to TezBake Container sudo docker exec -it tezbake-container /bin/sh Import Ledger key or soft key and register as baker Now that your node is in full sync, you can proceed with the most important part: (1) your baker parameters import into your baker node and (2) submit your baker registration on the blockchain.\nYou have the option to use the secure Ledger hardware wallet or simply use a local, unencrypted software key (a.k.a. soft key). The secure Ledger hardware wallet is the recommended option for mainnet baking.\nYou will have to first fund your baker address with enough tez (6000 minimum) to cover the bond requirement. You can do this by sending tez from your main account or exchange to the baker address.\n(Option 1 - RECOMMENDED) Import Ledger key to TezBake signer tezbake setup-ledger --platform --import-key --authorize --hwm 1 # If you have a custom derivation path, you can specify it as shown: (`--import-key=\"ed25519/0h/0h\"`; change ed to bip as needed for your individual needs; the default is ed25519/0h/0h which works just fine) # `--hwm 1` works great if you're setting up for the first time. If you're setting up a device that's been used to bake before, you want to change this (`1`) to the current block height on the blockchain for your safety. # If you're importing for the second time after already trying again but failing, you can use `--force` to force the import. Once imported, you can see your baker address by running tezbake info\nThe ledger will ask you twice to confirm this operation. Make sure the baker you see on the ledger screen matches the one you want to use. If you don’t have this information yet, don’t worry. To get the address of the ledger that’s used by default simply go to https://kukai.app and login with ledger, accepting the default derivation path.\nBLS (i.e. bip) signatures are designed to offer greater flexibility and scalability for certain applications compared to the default ED25519 algorithm.\nPutting the baker on a non-default derivation path provides an additional layer of security for your baker at the cost of extra complexity for you. Make sure your setup is clearly documented for your own records.\nIf your device was used to bake before it might have a “high watermark” aka HWM. If you try to use this device on a testnet, it will not work because the block height on test networks usually starts with 1 while mainnet is up to over a couple of million blocks at the time of writing. If you used to bake on mainnet with the same ledger as you’re trying to use now but it’s been a while, it’s highly recommended to change the 1 above to the current block on the network that will be used for the device going forward.\nThe watermark is simply a record of the lack block number your ledger helped to bake or attest. If you’re setting up a brand new device that’s not been used for baking before, there is no need to alter the default command above.\nAlways make sure you’re not accidentally going to double bake by using your production ledger and/or setup to bake on a testnet. It’s really easy to make this mistake and the only thing preventing it are your personal standard operating procedures, the documentation you keep, and the care you take when setting up your baker.\nTo double bake or attest due to baker setup error means having 2 different bakers with the same key on the same network. This is a serious offense and can lead to loss of bond and other penalties. Always double-check your setup and make sure you’re not accidentally double baking or attesting.\n(Option 2 - INSECURE) Import Soft key to TezBake signer First, generate the baker key for TezBake signer:\ntezbake signer - gen keys baker Make sure to backup your key in a secure location. You can get the key by running the following command:\ncat /bake-buddy/signer/data/.tezos-signer/secret_keys Then, import the baker public key hash to TezBake node:\nGet the tz1-tz3 address which is the hashed public key of the baker key:\ncat /bake-buddy/signer/data/.tezos-signer/public_key_hashs Import the hashed key to the TezBake node:\ntezbake node client import secret key baker http://127.0.0.1:20090/tz1bcSYEMKBoMnsACXzixn5bmzcdYjagqjZF Change the tz1bcSYEMKBoMnsACXzixn5bmzcdYjagqjZF to the hashed key you got from the previous command.\nFinally, change the permissions of the newly generated keys to be readable by the ascend user and group which runs the TezBake node:\nchown -R ascend:ascend /bake-buddy/ Register Ledger key as baker on the Tezos blockchain For this step your node level must be synced with the latest block on the blockchain explorer. You must also temporarily open your Ledger Tezos Wallet app to register your key as a baker (note: as well as when voting). For all other baker operations, you must use the Tezos Baking app.\ntezbake register-key Registering is not necessary if this is already an active baker ledger which is being setup on some kind of failover machine or in a situation where it has not been over 2 weeks of baking inactivity.\nRegistering applies to new bakers and to inactive bakers. If you’re setting up a new baker, you must register it. If you’re setting up a baker that’s been inactive for over 2 weeks, you must register it. If you’re setting up a baker that’s been inactive for less than 2 weeks, you don’t need to register it. The best way to find out if you need to register your baker again is to look into your baking rights schedule and see if they stopped coming in. If they did, you need to register your baker again.\nAny questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"Preparation For this tutorial, you’ll need to have already have installed Docker as shown here: https://docs.docker.com/engine/install\nPull and Execute the TezBake Docker Image Pull the TezBake Docker …","ref":"/tezbake/tutorials/how-to-bake-docker/","tags":"","title":"How to Bake with Docker"},{"body":"Preparation For this tutorial, you’ll need to have already followed one of the following tutorials:\nHow to Bake How to Bake on Ghostnet The TezPeak GUI is a graphical user interface for TezBake, which is a command-line tool for baking and endorsing Tezos blocks. It’s a great way to get started with baking and endorsing without having to use the command line on a day-to-day basis.\nPlease note that tezbake version 0.13.0-beta minimum is required to use TezPeak.\nInstallation TezPeak GUI supports using TezBake and TezPay simultaneously or by themselves. To run them at the same time simply combine both configurations in the same file as shown here: https://github.com/tez-capital/tezpeak\nDownload and install TezPeak via TezBake tezbake setup --peak Setup TezPeak configuration cd /bake-buddy/peak/ \u0026\u0026 touch config.hjson Open the config.hjson file with your favorite text editor.\nIf you’ve used json before but now hjson, you can read more about it here: https://hjson.github.io/\nSample TezPeak configuration with 1 baker Here’s an example of a config.hjson file with minimal TezBake configuration for one baker:\n{ listen: 0.0.0.0:8733 app_root: /bake-buddy modules: { tezbake: { bakers: [ tz1S5WxdZR5f9NzsPXhr7L9L1vrEb5spZFur ] } } } You can also make TezPeak GUI only available on the local computer if you have an all-in-one setup (i.e. the baker and the GUI are on the same computer which has a graphical user interface):\n{ listen: 127.0.0.1:8733 app_root: /bake-buddy modules: { tezbake: { bakers: [ tz1S5WxdZR5f9NzsPXhr7L9L1vrEb5spZFur ] } } } Full TezPeak configuration examples Here’s the TezPeak configuration with all TezBake available options:\n{ # Id to show in the header id: \"\" # Address to listen on listen: 127.0.0.1:8733 app_root: /bake-buddy modules: { tezbake: { # uncomment bellow to disable tezbake package monitoring # applications: null bakers: [ # list of bakers to monitor for balances and rights tz1P6WKJu2rcbxKiKRZHKQKmKrpC9TfW1AwM ] } # List of reference nodes to connect to # The reference nodes are used to get the rights and blocks if the baker's node is not available nodes: { \"Tezos Foundation\": { address: https://rpc.tzbeta.net/ is_rights_provider: true is_block_provider: false } tzkt: { address: https://rpc.tzkt.io/mainnet/ is_rights_provider: false is_block_provider: true # reports error if node not available, use for baker's node is_essential: false } } # The mode tezpeak should operate in # auto - if bound to localhost, it will operate in private mode if not, it will operate in public mode # public - assumes public environment, only readonly operations are allowed # private - assumes private environment, all operations are allowed mode: auto } Start TezPeak and connect to it tezbake start --peak If you’re connecting to the TezPeak GUI from a different computer, you’ll need to open a web browser and navigate to http://\u003cyour-baker-ip\u003e:8733.\nIf you’re connecting from the same computer, you can use http://127.0.0.1:8733 or http://localhost:8733.\nTezPeak example screenshot Any questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"Preparation For this tutorial, you’ll need to have already followed one of the following tutorials:\nHow to Bake How to Bake on Ghostnet The TezPeak GUI is a graphical user interface for TezBake, which …","ref":"/tezbake/tutorials/how-to-bake-gui/","tags":"","title":"How to Bake with Peak GUI"},{"body":"TezBake Bootstrapping To bootstrap your TezBake node means to download someone else’s snapshot of the blockchain and import it into your node. This is much faster than synchronizing the blockchain from scratch. There is a way to quickly bootstrap your node using a snapshot and a way to bootstrap your node using a snapshot and a block hash. The latter is the most reliable and robust method but it is also the slowest. The former is faster but it assumes you trust the source of the snapshot.\nPlease be aware that bootstrapping your node could result in your nonce revelation to fail and for you to forfit your endorsement rights for the cycle. This is because by default we’re using rolling snapshots which don’t export full blocks for past cycles by default. If your node baked a special kind of block during the last cycle, it may be asked to provide its nonce to the network. To do so, it needs to have the .tezos-client data intact from the last cycle and it needs to have the full blocks for the last cycle.\nTo remedy this situation and to never risk forfitting your endorsement rights for a whole cycle, you have to use a snapshot that’s at least 5-6 days old (from today), when bootstrapping a node. You also have to not wipe out or to move your .tezos-client directory. This way you’ll always have at least 1 cycle+ of full blocks in your node’s database as well as the nonce file on disk. The downside of this method is that it will slow down your bootstrap process by the amount of time it takes to download the full blocks for the past 1 cycle+, which can be up to 2 hours on some slow home networks.\nBootstrap using a snapshot You can get Tezos node snapshots in the following place run by the Tezos Foundation\nhttps://snapshots.tzinit.org/ Before bootstrapping your node, made sure to stop your node as shown below.\nUsing the first bootstrap method below ensures that the snapshot is checked for consistency both programmatically and by your checking the blockchain explorer(s) to confirm the block hash. This is the most reliable and robust method but it it also the slowest.\ntezbake stop tezbake bootstrap-node \u003curl\u003e \u003cblock_hash\u003e tezbake start # example: tezbake bootstrap-node https://snapshots.eu.tzinit.org/mainnet/rolling BL8Vq12HX6MJWkB6RLgQAYRKpKZ5fyMoLpWzAoQ6mh55gkKHiQU You can replace eu above with us or asia if you prefer to use a different mirror closer to you.\nGet the block hash and block level from the snapshot provider’s website: https://snapshots.eu.tzinit.org/mainnet/rolling.html\nThe \u003cblock_hash\u003e argument is optional but encouraged. If you don’t want to borther with this protection, use the second method below which will also be faster.\nVerify the hash/checksum provided by the snapshot provider to ensure the snapshot is valid. You can find the correct hashes for all blocks on Tezos blockchain explorers such as: https://tzkt.io/blocks https://tzstats.com/\nSimply search for the block level in the search field and verify the hash of the block matches the hash provided by the snapshot provider.\nUsing the second bootstrap method below is faster but it assumes you trust the source of the snapshot. Sometimes one doesn’t have a choice and must make such trade-offs when time is of the essence.\ntezbake stop tezbake bootstrap-node --no-check \u003curl\u003e tezbake start # example: tezbake bootstrap-node --no-check https://snapshots.eu.tzinit.org/mainnet/rolling You can replace eu above with us or asia if you prefer to use a different mirror closer to you.\nAny questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"TezBake Bootstrapping To bootstrap your TezBake node means to download someone else’s snapshot of the blockchain and import it into your node. This is much faster than synchronizing the blockchain …","ref":"/tezbake/tutorials/how-to-bootstrap/","tags":"","title":"How to Bootstrap"},{"body":"TezGov Portal Proposal Injection Tutorial TezGov Web Portal: https://gov.tez.capital\nLog into the TezGov portal by using the most secure method available to you.\nWe highly recommend using the direct Ledger login at the top. This method allows you to see the specific details of your vote on your Ledger screen. Use the Remote (signer) method if you have a signer somewhere on your LAN or local computer. This is an option for advanced users. Use the Beacon method if you are using a Beacon enabled wallet like Temple or Kukai. In this case you will not see the exact details of your vote on your Ledger screen and you will instead be asked to sign an arbitrary blob message. This method also works fine but it is inherently less secure than the direct Ledger method. Click New Proposal\nYou have 2 options when submitting a proposal via the TezGov portal.\n(1) You can submit a proposal published by the Tezos core developers by pasting its hash The true names of the proposals crafted by the collective Tezos core developer teams are posted in https://research-development.nomadic-labs.com/blog.html. Any Tezos baker can submit these proposals to the Tezos blockchain by pasting their hash as shown below. In the example given, the baker is submitting the Nairobi proposal.\n(2) You can submit a message to the Tezos bakers and community in the form of a Tezos proposal hash Vanity names are names crafted for the sole purpose to send a message to all ecosystem participants. They are not meant to be passed during the exploration or adoption phases. Vanity proposals are meant to be used as a way to communicate with the whole Tezos community as a delegate (i.e. baker) on Tezos. In the example given, the baker is submitting a signal that on-chain funding is something desirable.\nVanity proposals can be used for other reasons as well but they are never meant to be pursued all the way through. The scope of vanity proposals does not extend past the proposal round. All bakers must take great care not to vote on these proposals once the governance process enters the exploration phase.\nWe encourage all bakers to use this system only for serious ecosystem governance issues. The governance portal functionality is a two way street. The ability to speak does not absolve a baker from the consequences of the baker’s speech.\nAny questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"TezGov Portal Proposal Injection Tutorial TezGov Web Portal: https://gov.tez.capital\nLog into the TezGov portal by using the most secure method available to you.\nWe highly recommend using the direct …","ref":"/tezgov/tutorials/how-to-inject-proposals/","tags":"","title":"How to Inject Proposals"},{"body":"Monitoring TezBake gives you the option to monitor all Tezos node and baking services. TezBake utilizes the journalctl utility included in most Linux distribution to store and manage its logging. You can extract all logs for a node easily to diagnose any issues. This tutorial will walk you through the process of monitoring your TezBake node.\nMonitor overall TezBake status Run this command to get the status of your baker in a snapshot. After first setting up and starting the baker, you may need to give it a minute or 2 before the status display stops changing and missing some information. If you notice there is an error status on any of the fields after around 3-5 minutes of starting the services, seek out help in the Tez Capital community as there is something that probably needs tweaking.\ntezbake info Monitor TezBake logs Monitor full TezBake node and baker logs in real time Using the command below shows everything your baker is doing on a second-by-second basis. If there is a problem to be discovered, it will be mentioned here.\ntezbake node log -f Monitor limited TezBake node or baker logs in real time Using these commands you can focus on just the node, just the baking/endorsing process or just the accusation (of double baking) processes\ntezbake node log node -f tezbake node log baker -f tezbake node log accuser -f Monitoring just the node process shows blocks being synchronized in real time by your node.\nMonitoring just the baker process shows all attempts to endorse and bake blocks. The baker process works along with the node process to inject blocks and endorsements into the Tezos network.\nMonitoring just the accuser process shows the attempts of your node to call our double baking events on the Tezos network. Normally you should not see anything in this log.\nMonitor TezBake baker logs for the next protocol During times when Tezos protocol are being switched out you will notice that there is a baker process as well as a baker-next process. The same is true about the accuser process. The baker-next process is the baker process that will be used when the next protocol is activated. The baker process will be used until the next protocol is activated. The accuser-next process is the accuser process that will be used when the next protocol is activated. The accuser process will be used until the next protocol is activated.\ntezbake node log baker-next -f tezbake node log accuser-next -f The baker-next process will show one of two things.\nProtocol is waiting to start. This means everyone is waiting for the new proposal to be activated on mainnet. Nothing needs to be done until the new protocol is activated The baker process is running like normally. This means the new proposal has already activated and the TezBake needs to be updated to reflect it. There is no penalty for not updating unless you do not update in time for the next proposal. In other words, updating is only necessary when a proposal switch is about to happen. We still recommend that all Tezos bakers update their TezBake to the latest production version as soon as possible to get the latest Octez improvements. Monitor full TezBake signer logs in real time Using the command below shows everything your Ledger is signing or trying to sign. If there is a hardware wallet issue, this log will confirm it.\ntezbake signer log -f General Linux monitoring All TezBake logs are stored in the /var/log/syslog file. You can view the logs by running the commands below. You can also use tezbake itself to view the logs in real time.\ncat /var/log/syslog | grep tezbake tail -f /var/log/syslog | grep tezbake Any questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"Monitoring TezBake gives you the option to monitor all Tezos node and baking services. TezBake utilizes the journalctl utility included in most Linux distribution to store and manage its logging. You …","ref":"/tezbake/tutorials/how-to-monitor/","tags":"","title":"How to Monitor"},{"body":"How to monitor Tezos balances and transactions with TezWatch Using TezWatch you can keep an eye on transactions to and from baker wallets or baker payment wallets with flexibility.\nYou can monitor some of the following aspects:\nTransfers in/out in amounts greater than X but less than Y Notify when balance falls below X If you want to remain anonymous, you can create a new Discord account and join our Discord server using that account. Then you can DM the TezWatch bot from that account and what with it in private.\nTo get all “sources” and “events” use the /events command\nHere are the descriptions of all the key variables you will need to configure to monitor balances and transactions:\nVariable Available Options Description source wallet The general area of interest. staking is related to activities that validate on the chain and chain is related to general chain progression event transfer, balance-updated These are the specific staking events that you’re interested in being notified for. Each event has its own unique subscription tier. All missed* ones are TIER 0 or FREE conditions for transfers tz1UGkfyrT9yBt6U5PV7Qeui3pt3a8jffoWv:in, tz1UGkfyrT9yBt6U5PV7Qeui3pt3a8jffoWv:in\u003e1, tz1UGkfyrT9yBt6U5PV7Qeui3pt3a8jffoWv:50\u003ein\u003e1 Be nofified for all incoming transactions, all incoming transactions over 1 or all transactions smaller than 1 but larger than 50 conditions for balance-updated tz1UGkfyrT9yBt6U5PV7Qeui3pt3a8jffoWv:50\u003ebalance Be nofidied for all incoming transactions, all incoming transactions over X or all transactions smaller than X but larger than Y Please note that some TezWatch features are considered premium and will in the future require a subscription. The freemium features indicated as TIER 0 will always be available for free to the Tezos ecosystem.\nTransfers Examples Here’s an example of subscribing to all incoming transactions to the wallet tz1UGkfyrT9yBt6U5PV7Qeui3pt3a8jffoWv\nHere’s an example of subscribing to incoming transactions to the wallet tz1UGkfyrT9yBt6U5PV7Qeui3pt3a8jffoWv of over 1 tez\nHere’s an example of subscribing to incoming transactions to the wallet tz1UGkfyrT9yBt6U5PV7Qeui3pt3a8jffoWv of over 1 tez but less than 50 tez\nBalances Example Here’s an example of subscribing to the wallet tz1UGkfyrT9yBt6U5PV7Qeui3pt3a8jffoWv’s balance being below 50 tez.\nAny questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"How to monitor Tezos balances and transactions with TezWatch Using TezWatch you can keep an eye on transactions to and from baker wallets or baker payment wallets with flexibility.\nYou can monitor …","ref":"/tezwatch/tutorials/how-to-monitor-balances-and-transactions/","tags":"","title":"How to Monitor Tezos Balances and Transactions"},{"body":"Using TezPay Summary of Using Tezpay Using the TezPay application is through CLI for now and will be carried out through a few commands.\nThis section will review:\nGenerating a payout table for all delegates Generating a test notification (Testing the Twitter/Discord/E-mail notifications from the advanced configuration file) Generating an actual payout Running a continual payout Keeping TezPay up-to-date Before using a command in TezPay, you will need to run two additional commands that will allow you to call the application via commands and set permissions While in the TezPay directory in the terminal, run the following commands (see code and examples below):\nmv tezpay-linux-amd64 tezpay\nchmod +x tezpay\nUsing TezPay: Step 1 - Generating a payout Table Generating a payout table is a tool that is useful for Public Bakers because it allows the baker to see the incoming rewards from baking (both block rewards \u0026 fees from delegates), review payout per delegator from their stake, and other data (see below).\nThe command to generate a payout table is as follows (always remember to be in the tezpay directory:\n./tezpay generate-payouts\nThis will generate a payout table, as exampled below:\nNote: the Delegator \u0026 Recipient columns have been hidden\nRepresents the table of invalid delegators that will not be paid out due to not meeting specific thresholds (ie minimum payout threshold/minimum balance) Represents the table of valid delegators that will be paid out The list of Delegators first 4 and last 4 characters of their wallet The list of Recipients of payment first 4 and last 4 characters of their wallet (often the same as Delegator) The delegated balance for each Delegator for that particular cycle Represents the kind of reward given (ie delegator reward, baker reward, and fee income) The amount of the specific reward to be paid out The fee rate for each delegator, will reflect those delegators who have custom fees per the configuration file The fee collected by the baker from each delegator for hosting their delegation The transaction fee to pay out each reward Using TezPay: Step 2 - Testing Notifications This step will be used to test the notification system for your TezPay application. This step will NOT need to be completed every payout, but only when you changes messages to test that it was successful.\nwhile in the tezpay directory, use the command:\n./tezpay test-notify\nUsing TezPay: Step 3 - Initiating a Payout To use the TezPay application to send a payment will require 1 line of code and one additional confirmation while it runs.\nTo run TezPay, run the code:\n./tezpay pay\nThe system will initiate the TezPay application at this point and present a payout table, similar to the table(s) from step 1.\nOnce the table is displayed, the prompt will ask you to confirm the payout, and you need to confirm y or n (see below):\nYou will be asked to confirm, type ‘y’ for yes or ‘n’ for no If you confirm the transaction, the payouts will proceed and your delegates will be paid out, as well as your Baker wallet. Remember, if you are using a separate wallet to payout from your Baker wallet you will need to add funds to cover the payments.\nAt this point you have successfully ran the TezPay application and paid out your delegates. Be sure to check the confirmations and any errors that may have been broadcasted in the terminal (ie, the example above did not send notifications because that was not set up).\nUsing TezPay: Step 4 - Running a Continual Payout To use the TezPay application to send a payment will require 1 line of code and one additional confirmation while it runs.\nTo run TezPay in continual mode, run the command:\n./tezpay continual\nRunning in continual mode will start its first payment a little bit after the current cycle (one during which you launched it) finishes and the next one begins (usually around 30-60 minutes after the beginning of the new cycle).\nIf you would like to start in continual mode but still need to pay your delegators for last cycle, run the command from Step 3. first and then launch TezPay in continual mode.\nSummary: TezPay TezPay is an application that allows for easy payouts for public bakers on the Tezos Blockchain. This allows for significant customizations and flexibility with respect to the payout system and empowers bakers to further take control of their Bakery and aid in decentralizing the Tezos Blockchain.\nAny questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"Using TezPay Summary of Using Tezpay Using the TezPay application is through CLI for now and will be carried out through a few commands.\nThis section will review:\nGenerating a payout table for all …","ref":"/tezpay/tutorials/how-to-pay/","tags":"","title":"How to Pay Delegators"},{"body":"TezGov Portal Set Deposits Limit Tutorial TezGov Web Portal: https://gov.tez.capital\nLog into the TezGov portal by using the most secure method available to you.\nWe highly recommend using the direct Ledger login at the top. This method allows you to see the specific details of your vote on your Ledger screen. Use the Remote (signer) method if you have a signer somewhere on your LAN or local computer. This is an option for advanced users. Use the Beacon method if you are using a Beacon enabled wallet like Temple or Kukai. In this case you will not see the exact details of your vote on your Ledger screen and you will instead be asked to sign an arbitrary blob message. This method also works fine but it is inherently less secure than the direct Ledger method Expand the Tools pane and select Set Deposits Limit\nFill in the amount, in tez, you want to set as your deposits limit and submit\nYou will be asked to confirm the deposits limit on your Ledger device.\nOnce confirmed, the page will refresh within 30 seconds.\nAny questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"TezGov Portal Set Deposits Limit Tutorial TezGov Web Portal: https://gov.tez.capital\nLog into the TezGov portal by using the most secure method available to you.\nWe highly recommend using the direct …","ref":"/tezgov/tutorials/how-to-set-deposits-limit/","tags":"","title":"How to Set Deposits Limit"},{"body":"Summary Notifications can be automatically sent out when payouts are generated using TezPay. The text are configured in the config.json file, however there are preliminary steps needed inorder to be able to utilize these features. This section will review the necessary steps and information needed from platforms that allow for auto-notifications sent via TezPay. This tutorial is meant for individuals that have zero experience with interacting with these systems - feel free to skip sections if you are an advanced user.\nTwitter A Baker can use TezPay to automatically send notifications that payments have been made. This allows for ease of communications for the public baker to the delegates and we will walk through steps to allow for this here. There will be two sections:\n1. Twitter Setup 2. TezPay config.json file setup Twitter Setup In order to setup twitter, be sure you are signed in on a browser window to your twitter account. While being signed into Twitter in a seperate browser, navigate to https://developer.twitter.com/ and select ‘Developer Portal’ in the top menu- the developer portal site where you will set up your development account and get the required information for the config.json file and set up permissions. You will then need to fill in some basic information in order to enable the Development Portal profile to be active. be sure that all of the information is correct (if you use multiple twitter accounts be sure the one you want to enable for notifications is the correct one). Once you submit the information for your development profile - you will need to accept the Terms and Conditions. After accepting Terms and Conditions - you will need to verify your e-mail address that you provided by clicking the link in the e-mail sent from Twitter. Once you verify your email - this will automatically link you back to your Developer Portal Site and prompt you for an ‘App Name’ (see TezPay Notif in screen capture). Once you name your App - you will be given 3 seperate Keys. These will be used to inorder to call the Twitter profile that you are looking to send Notifcations to - and sign for the permissions. Be sure to have these saved in a secure place - they will be used later. Once you have the keys secured, click ‘Dashboard’ button in lower right. You will now be in your Twitter Development Dashboard and see the App you created (for this example TezPayNotifs). Click the ‘gear’ icon to continue set-up. Navigate to ‘User Authentication Settings’ section and click ‘Set-up’ to continue. We will fill out the required items for the form under User Authentication settings as follows: i. App Permissions: Select ‘Read and write’ ii. Type of App: Select ‘Web App, Automated App or Bot’\niii. App Info: a. Callback URI/Redirect URL: this can be anything but for this example we will use ‘https://www.TezPayisthebest.com/'\nb. Website URL: this can be anything but for this example we will use ‘https://www.TezPayisthebest.com/'\niv. Click ‘save’ when finished. You will then get your Client ID and Client Secret - copy and save both of these with your other Keys attained earlier. Click ‘Done’\nThis will bring you back to the main screen of the App - navigate to the ‘Keys and Tokens’ toggle at the top of the page. Now, ‘Generate’ an Access Token and secret - write these down and then once you have confirmed you will be ready to edit the config.json in TezPay. Note - be sure the Access Token and Secret has ‘read and write’ permission (see image below). For the Next step - setting up the config.json - you will need four items:\na. API Key and Secret (also known as Consumer Key/Secret)\nb. Access Token and Secret TezPay config.json Setup for Twitter Notifications We will use the API Key and Secret as well as the Access Token and Secret to edit the Config file to allow for permissions and calls to push notifcations upon each successful payout.\nYou will add the following code block at the base of the config.json file to enable the notifications for TezPay. Note that the message_template can be anything and you can use the , , terms to automatically fill in these terms for each cycle. notifications: [\n{\naccess_token: Your_Acces_Token\naccess_token_secret: Your_Access_Token_Secret\nconsumer_key: Your_Consumer_Key\nconsumer_secret: Your_Consumer_Key_Secret\nmessage_template: Rewards for \u003cCycle\u003e have been paid to \u003cDelegators\u003e delegates in amount of \u003cDistributedRewards\u003e using #TezPay.👀 XTZ baked with #TezBake! We donate to wallet tz1R2GnBudU97Lra8Q3VDG7cUooNvUQ9ghCs to fund future development in Tezos. #cerberusbakery #tezos.\ntype: twitter\n}\n] Once you have filled in the necessary information - you have setup Notifications for Twitter! Test the notification by using command: a. tezpay test-notify Any questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"Summary Notifications can be automatically sent out when payouts are generated using TezPay. The text are configured in the config.json file, however there are preliminary steps needed inorder to be …","ref":"/tezpay/tutorials/how-to-notify/","tags":"","title":"How to Setup Notifications"},{"body":"Preparation For this tutorial, you’ll need to have already followed the following tutorials:\nGenerate payout soft wallet Create TezPay configuration file Default configuration Starter/Minimal configuration All configuration options Download TezBake (note: Installing node/baking services not necessary for this tutorial) Install ami-tezpay service Following the guides above will ensure you have the necessary tools and configurations to proceed with this tutorial.\nInstallation TezPeak GUI supports using TezBake and TezPay simultaneously or by themselves. To run them at the same time simply combine both configurations in the same file as shown here: https://github.com/tez-capital/tezpeak\nScroll down to the bottom of the page for the full configuration example.\nDownload and install TezPeak via TezBake tezbake setup --peak You don’t need to install the TezBake node or baker services to use TezPay.\nSetup TezPeak configuration cd /bake-buddy/peak/ \u0026\u0026 touch config.hjson Open the config.hjson file with your favorite text editor.\nSample TezPeak configuration Here’s an example of a minimal TezPeak config.hjson file with just TezPay configured:\n{ listen: 0.0.0.0:8733 app_root: /bake-buddy modules: { tezpay: { payout_wallet: tz1X7U9XxVz6NDxL4DSZhijME61PW45bYUJE } } } Full TezPeak configuration examples Here’s the TezPeak configuration with all available TezPay options:\n{ # Id to show in the header id: \"\" # Address to listen on listen: 127.0.0.1:8733 app_root: /bake-buddy modules: { tezpay: { # can be null to disable tezpay package monitoring applications: { # path to tezpay ami package, either absolute or relative to parent directory peak tezpay: tezpay } payout_wallet: tz1X7U9XxVz6NDxL4DSZhijME61PW45bYUJE payout_wallet_preferences: { balance_warning_threshold: 100 balance_error_threshold: 50 } # forces all operations to be dry run force_dry_run: true } } # List of reference nodes to connect to # The reference nodes are used to get the rights and blocks if the baker's node is not available nodes: { \"Tezos Foundation\": { address: https://rpc.tzbeta.net/ is_rights_provider: true is_block_provider: false } tzkt: { address: https://rpc.tzkt.io/mainnet/ is_rights_provider: false is_block_provider: true # reports error if node not available, use for baker's node is_essential: false } } # The mode tezpeak should operate in # auto - if bound to localhost, it will operate in private mode if not, it will operate in public mode # public - assumes public environment, only readonly operations are allowed # private - assumes private environment, all operations are allowed mode: auto } Start TezPeak and connect to it tezbake start --peak If you’re connecting to the TezPeak GUI from a different computer, you’ll need to open a web browser and navigate to http://\u003cyour-baker-ip\u003e:8733.\nIf you’re connecting from the same computer, you can use http://127.0.0.1:8733 or http://localhost:8733.\nTezPeak example screenshot Any questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"Preparation For this tutorial, you’ll need to have already followed the following tutorials:\nGenerate payout soft wallet Create TezPay configuration file Default configuration Starter/Minimal …","ref":"/tezpay/tutorials/how-to-setup-gui/","tags":"","title":"How to Setup with Peak GUI"},{"body":"Troubleshooting Troubleshooting TezBake mostly comes in during the installation phase, when an error is encountered during the setup process.\nInstallation errors If you encounter an installation issue, run the setup command again with the --log-level=trace option, for example:\ntezbake setup -a --log-level=trace You can add --log-level=trace regardless of the setup type that’s being attempted, whether it’s on Ghostnet or some other testnet.\nBlockchain errors Sometimes, you will notice that tezbake info never seems to show that you are able to fully synchronize your node. Upon looking at it you may find that your node is stuck on a certain block. This is usually due to a problem with the Tezos node itself. The Tezos node is a separate process from the TezBake process. If you are having issues with the Tezos node, you can try to restart it with the following command:\ntezbake restart You may see an error like the one below, which indicates your node needs to be bootstrapped with a fresh copy of the Tezos blockchain.\nbaker@baker-VirtualBox:~$ tezbake node log node -f -- Logs begin at Wed 2022-05-18 14:16:28 CEST. -- mai 20 08:51:31 baker-VirtualBox systemd[1]: Stopped bb-default-node node service. mai 20 08:51:31 baker-VirtualBox systemd[1]: Started bb-default-node node service. mai 20 08:51:32 baker-VirtualBox node[5868]: May 20 08:51:32.414 - node.config.validation: the node configuration has been successfully validated. mai 20 08:51:32 baker-VirtualBox node[5868]: May 20 08:51:32.415 - node.main: read identity file (peer_id = idqueYR61yjX8QfsiLru4FEZFSWi7m) mai 20 08:51:32 baker-VirtualBox node[5868]: May 20 08:51:32.415 - node.main: starting the Tezos node v13.0 (cb9f439e) (chain = TEZOS_MAINNET) mai 20 08:51:32 baker-VirtualBox node[5868]: May 20 08:51:32.415 - node.main: disabled local peer discovery mai 20 08:51:32 baker-VirtualBox node[5868]: May 20 08:51:32.415 - node: shell-node initialization: bootstrapping mai 20 08:51:32 baker-VirtualBox node[5868]: May 20 08:51:32.678 - node: shell-node initialization: p2p_maintain_started mai 20 08:51:32 baker-VirtualBox node[5868]: May 20 08:51:32.678 - external_block_validator: initialized mai 20 08:51:33 baker-VirtualBox node[5868]: May 20 08:51:33.599 - external_block_validator: block validator process started with pid 5874 mai 20 08:51:43 baker-VirtualBox node[5868]: May 20 08:51:43.267 - node.store: the store is in an inconsistent state: mai 20 08:51:43 baker-VirtualBox node[5868]: May 20 08:51:43.267 - node.store: Error: mai 20 08:51:43 baker-VirtualBox node[5868]: May 20 08:51:43.267 - node.store: The block 'current_head' is unexpectedly missing from the store. mai 20 08:51:43 baker-VirtualBox node[5868]: May 20 08:51:43.267 - node.store: mai 20 08:51:43 baker-VirtualBox node[5868]: May 20 08:51:43.267 - node.store: attempting to restore the store's consistency... Any questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"Troubleshooting Troubleshooting TezBake mostly comes in during the installation phase, when an error is encountered during the setup process.\nInstallation errors If you encounter an installation …","ref":"/tezbake/tutorials/how-to-troubleshoot/","tags":"","title":"How to Troubleshoot"},{"body":"TezBake Updating The TezBake software consists of four components:\nami - App management engine: templating and orchestration - https://github.com/alis-is/ami eli - Lua Interpreter \u0026 Essential libraries for simple cross platform scripting - https://github.com/alis-is/eli tezbake - Command line interface for setting and monitoring your baker, using the help of the two tools above Octez binaries - Tezos node binaries published by the Tezos core developers - https://gitlab.com/tezos/tezos/-/releases We regularly update all parts of the TezBake stack and the Tezos core developers regularly publish new Octez versions and protocols. All mandatory updates and optional updates are posted across Tez.Capital social media channels. Updates must be performed manually at this time, to ensure the Tezos node operator is the only person able to control their baking operation.\nWhich TezBake upgrade method should I use? We will sometimes specify which upgrade method to use by referencing its letter. If a letter recommendation is not specified, use the guidelines below to determine which method to use:\n(A) This upgrade method works in most cases. The only component not updated is the tezbake binary itself. (B) This upgrade method is used when you want to update the Octez binaries only. This is useful when old protocol binaries need to be removed from your baker. (C) This upgrade method is used when you want to update the entire TezBake stack. If you have the time, this is the recommended method as it makes sure you get the latest version of all components. (D) This upgrade method is used when you want to update the tezbake binary only. Sometimes we release new versions of tezbake that have fixes and new features to make your baker setup and operation easier. This upgrade method doesn’t take your baker down as the tezbake binary is not used during the baking process. (A) Update ami \u0026 eli and Octez binaries (updates components: #1, #2, #4)\ntezbake upgrade -a -s The -s flag is used when there is a need to manually upgrade the Octez storage. This is a rare case and is only needed when the Octez storage format changes. This flag is not needed for regular updates. Using the flag when there is no update to storage needed doesn’t have an impact on your baker.\n(B) Update Octez binaries only (updates components: #4)\ntezbake upgrade (C) Update the entire TezBake stack (updates components: #1, #2, #3, #4)\nFirst update your tezbake binary to the latest version, depending on your computer architecture:\nwget -q https://github.com/tez-capital/tezbake/raw/main/install.sh -O /tmp/install.sh \u0026\u0026 sudo sh /tmp/install.sh # you may be prompted for sudo password Then update the rest of the TezBake software stack:\ntezbake upgrade -a -s The -s flag is used when there is a need to manually upgrade the Octez storage. This is a rare case and is only needed when the Octez storage format changes. This flag is not needed for regular updates. Using the flag when there is no update to storage needed doesn’t have an impact on your baker.\n(D) Update tezbake only (updates components: #3)\nUpdate your tezbake binary to the latest version, depending on your computer architecture:\nwget -q https://github.com/tez-capital/tezbake/raw/main/install.sh -O /tmp/install.sh \u0026\u0026 sudo sh /tmp/install.sh # you may be prompted for sudo password What should I do after updating? After all updates and changes to your Tezos node, always ensure your baking process continues successfully by monitoring its performance on https://TzStats.com and https://TzKT.io.\nCheck your TezBake stack versions to ensure they are up to date:\ntezbake version --all You should see the expected Octez version along with the release date of the binaries.\nAny questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"TezBake Updating The TezBake software consists of four components:\nami - App management engine: templating and orchestration - https://github.com/alis-is/ami eli - Lua Interpreter \u0026 Essential …","ref":"/tezbake/tutorials/how-to-update/","tags":"","title":"How to Update"},{"body":"Keeping TezPay Up-to-Date For access to future releases via Linux CLI, run the following command from within the folder where tezpay is located:\ncd tezpay wget -q https://raw.githubusercontent.com/alis-is/tezpay/main/install.sh -O /tmp/install.sh \u0026\u0026 sh /tmp/install.sh Any questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"Keeping TezPay Up-to-Date For access to future releases via Linux CLI, run the following command from within the folder where tezpay is located:\ncd tezpay wget -q …","ref":"/tezpay/tutorials/how-to-update/","tags":"","title":"How to Update"},{"body":" Chat/Support Discord (primary) Telegram Blog Medium Source Code https://github.com/tez-capital/ https://gitlab.com/alis-is/ https://gitlab.com/groktech/ Social Media Twitter: Tez Capital Twitter: TezBake Twitter: TezPay Twitter: TezGov Twitter: alis-is (Berry Studio) Twitter: GrokTech ","categories":"","description":"","excerpt":" Chat/Support Discord (primary) Telegram Blog Medium Source Code https://github.com/tez-capital/ https://gitlab.com/alis-is/ https://gitlab.com/groktech/ Social Media Twitter: Tez Capital Twitter: …","ref":"/","tags":"","title":"Tez Capital Docs"},{"body":"\rHi 👋 I'm your bake buddy!\n","categories":"","description":"","excerpt":"\rHi 👋 I'm your bake buddy!\n","ref":"/tezbake/","tags":"","title":"TezBake"},{"body":"\rHi 👋 I'm your gov buddy!\n","categories":"","description":"","excerpt":"\rHi 👋 I'm your gov buddy!\n","ref":"/tezgov/","tags":"","title":"TezGov"},{"body":"Baking Best Practices This is the description of the ideal TezBake hardware setup and best practice for someone who wants to perform an excellent job baking on-premise, in their home, office or data center (in person) at a reasonable cost.\nYou can get an idea of what kind of computer needs to be dedicated to Tezos baking by looking at the guide below https://www.fxhash.xyz/article/how-to-setup-your-own-tezos-bakery\nRecommended Hardware Setup Two computers (see link above) with equal or equivalent hardware specs (one optional) Two Ledger Nano S Plus or Nano X hardware wallets (one optional). The Ledger Nano S works as well but is no longer recommended because it takes up to an extra second (compared to the other ones) for it to sign a block or endorsement. This can cause you to miss a block or endorsement One UPS battery backup (optional) Two computers You will need two computers and both computers will be running TezBake. One computer will be used for baking and the other computer will be used as a backup. A manual failover of the Ledger hardware will be necessary to start baking on the second computer if the first computer fails. The second computer is optional, but it is highly recommended. If you only have one computer, you will need to have a backup plan in place in case the computer fails.\nTwo Ledger Nano S Plus or Nano X While having two computers is somewhat optional, especially for a smaller baker, having two Ledger Nano S Plus or Nano X hardware wallets is very highly recommended. You will need to have two hardware wallets for the following reasons:\nIn the event of Ledger hardware failure To transfer tez to your payment wallet or elsewhere, without interrupting baking To vote on Tezos governance proposals, without interrupting baking Note that you must never simultanerously use two hardware wallets to bake for the same baking address. This will result in a double baking or double endorsing offense and you will be slashed. It’s very easy to avoid by:\nNot authorizing the second hardware wallet to bake for the same address before it’s needed Not importing your baking wallet into your backup computer before it’s needed Before changing any Ledger connections, always ensuring that only one hardware wallet is baking for the address Not installing TezBake on second computer before it’s needed. If you have a fast internet connection, the entire setup process takes just a few minutes. If you only have one hardware wallet and it fails, you will be down until you get a second one and set it up to bake.\nOne UPS battery backup Having at least one UPS device which has your ISP connection and your baking computer connected to it is highly recommended. This will ensure that your baking computer will not be interrupted in the event of electrical failure up to the amount of time supported by your battery. The bigger the battery, the more time your computer will keep baking when power fails.\nIf your baking computer and your ISP are in different rooms or on different electrical outlets, you need to ensure that each one is independently supplied with UPS power.\nBad Practices Using Wi-Fi Using DHCP Using your daily use computer or laptop Not using TezBake Discord or Telegram monitoring bots Using Wi-Fi Wi-Fi is not as realiable as a wired connection and can cause strange and random issues. It is highly recommended that you use a wired connection for your baking computer.\nUsing DHCP DHCP automatically assigns IP addresses to your computer. This can cause issues with your baking computer in the event where DHCP is unable to automatically renew its lease. It is highly recommended that you use a static IP address for your baking computer.\nUsing your daily computer or laptop If you use your daily computer for baking, it’s much more likely to have issues because of accidentally affecting either your baker’s connection to the internet or your Ledger’s connection to your baker.\nNot using TezBake Discord or Telegram monitoring bots The TezBake Discord and Telegram bots are designed to monitor your baker’s status and alert you if there are any issues. It is highly recommended that you use these bots to monitor your baker. Should your baker go offline, you will be notified immediately and can take action to fix the issue.\nAny questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"Baking Best Practices This is the description of the ideal TezBake hardware setup and best practice for someone who wants to perform an excellent job baking on-premise, in their home, office or data …","ref":"/getting-started/best-practices/","tags":"","title":"Tezos Baking Best Practices"},{"body":"Pubic Baking Public baking and private baking are the same thing from the perspective of the blockchain. The only difference is that a public baker has announced themselves to the Tezos community and is willing to accept delegations. A private baker is not willing to accept delegations from delegators. A private baker cannot stop these delegations from occuring but a private baker is not expected to pay out rewards to delegators.\nOn Tezos, bakers (a.k.a. delegates) are paid directly by the blockchain for themselves as well as for their delegators. It’s up to each and every baker to determine their own fee structure and payment policies. It’s also up to each baker as to which payment software they will use to distribute rewards to delegators. There are several different payment software options available to bakers. Some bakers use their own custom software, some bakers use a third party payment software, and some bakers use a combination of both. We recommend using our TezPay payment software. TezPay allows you to fully automate the distribution of rewards to delegators.\nWith the recent introduction of Adaptive Issuance on the Tezos protocol, bakers are now able to accept stakers. Stakers are different from delegators in that:\nStaker tez is frozen for up to 12 days. Stakers are liable for any losses incurred by the baker due to double baking or double endorsing. While rare, this is a risk that stakers take on when they stake their tez with a baker. Stakers are paid directly by the protocol without any need for the baker to pay them, unlike with delegators A public baker has to contact two entities within the Tezos ecosystem to be added to the list of public bakers within each of their ecosystems. The entities in question all have their own methods to determine your public baker details, such as your fee and payment policies, via self-reporting. You will be asked to self-report your details to each of the following entities:\nhttps://tzstats.com (Trilitech) The best place to contact them is: tzstats@trili.tech https://tzkt.io / https://baking-bad.org (Baking Bad) The best places to contact them are: https://t.me/baking_bad_chat and https://discord.gg/aG8XKuwsQd Most wallets and services on Tezos pull their baker information from one of these sources, mostly from TzKT. If you are not listed on TzKT, you will not be listed on most wallets and services on Tezos.\nAny questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"Pubic Baking Public baking and private baking are the same thing from the perspective of the blockchain. The only difference is that a public baker has announced themselves to the Tezos community and …","ref":"/getting-started/public-baking/","tags":"","title":"Tezos Public Baking"},{"body":"\rHi 👋 I'm your pay buddy!\n","categories":"","description":"","excerpt":"\rHi 👋 I'm your pay buddy!\n","ref":"/tezpay/","tags":"","title":"TezPay"},{"body":" Hi 👋 I'm your watch buddy!\n","categories":"","description":"","excerpt":" Hi 👋 I'm your watch buddy!\n","ref":"/tezwatch/","tags":"","title":"TezWatch"},{"body":"TezBake A payment distribution tool developed by Tezos Capital for Bakers on the Tezos Blockchain\nTezBake CLI is a command line tool for Linux which integrates its function with the official Tezos binary images provided by the Tezos developers, with the goal to deliver a seamless experience in installing, upgrading and monitoring a Tezos node. TezBake CLI is the tool used by TezBake GUI “under the hood” to provide the core functionality.\nThere are 2 ways to bake on Tezos depending on your intention. You can learn how to bake on a testnet with fake tokens or you can bake on mainnet with real tez. Either way TezBake has your back.\nTutorials ","categories":"","description":"","excerpt":"TezBake A payment distribution tool developed by Tezos Capital for Bakers on the Tezos Blockchain\nTezBake CLI is a command line tool for Linux which integrates its function with the official Tezos …","ref":"/tezbake/tutorials/","tags":"","title":"Tutorials"},{"body":"TezBake A proposal governance took as well as a delegator swiss army knife\nhttps://gov.tez.capital is a Tezos delegate proposal portal as well as a Tezos staker and delegator swiss army knife tools, which exposes all the staking and delegation features of the Tezos blockchain in a simple and easy to use interface.\nTutorials ","categories":"","description":"","excerpt":"TezBake A proposal governance took as well as a delegator swiss army knife\nhttps://gov.tez.capital is a Tezos delegate proposal portal as well as a Tezos staker and delegator swiss army knife tools, …","ref":"/tezgov/tutorials/","tags":"","title":"Tutorials"},{"body":"TezPay A payment distribution tool that’s easy to setup and automate\nThe goal of this document is to instruct a baker on how to set up TezPay and how to pay-out the bakers delegates. The workflow will accomplish these tasks from Command-line-interface(CLI) - if you do not have experience in CLI this tutorial will include screen captures as well as examples and explanations of the steps. This tutorial is meant to cover all skill levels from novice to expert.\nTutorials ","categories":"","description":"","excerpt":"TezPay A payment distribution tool that’s easy to setup and automate\nThe goal of this document is to instruct a baker on how to set up TezPay and how to pay-out the bakers delegates. The workflow will …","ref":"/tezpay/tutorials/","tags":"","title":"Tutorials"},{"body":"TezPay A bot-based Tezos baker monitoring tool for your peace of mind\nTezWatch is indended to provide Tezos bakers, stakers and delegators the peace of mind that their baking operations are running smoothly. TezWatch is a bot-based monitoring tool that will notify you of any issues with your baking operations.\nTezWatch’s original focus was the Discord platform, but we are expanding to other platforms as well. We are currently working on a Telegram bot and a Twitter bot.\nTutorials ","categories":"","description":"","excerpt":"TezPay A bot-based Tezos baker monitoring tool for your peace of mind\nTezWatch is indended to provide Tezos bakers, stakers and delegators the peace of mind that their baking operations are running …","ref":"/tezwatch/tutorials/","tags":"","title":"Tutorials"},{"body":"What is Tezos Baking? Fundamentally speaking, “Baking” on Tezos involves 2 things:\nThe creation of blocks every 10 seconds as well as the attestation of the soundness of blocks produced by other bakers. Bakers put their tez at stake in order to be able to bake blocks and attest other bakers’ blocks. The tez put at stake by the bakers is used as deterrent against bakers acting maliciously. If a baker acts maliciously, they will lose their tez at stake. If a baker acts honestly, they will be rewarded with tez from the protocol. To act maliciously, a baker would have to create a block that is invalid or attest to a block that is invalid.\nParticipating in the Tezos proposal governance process. A Tezos proposal is able to change anything about the Tezos protocol rules as well to fund any address with tez from the protocol.\nAny questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"What is Tezos Baking? Fundamentally speaking, “Baking” on Tezos involves 2 things:\nThe creation of blocks every 10 seconds as well as the attestation of the soundness of blocks produced by other …","ref":"/getting-started/what-is-baking/","tags":"","title":"What is Tezos Baking"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tezpay/configuration/","tags":"","title":"Configuration"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tezpay/extensions/","tags":"","title":"Extensions"},{"body":"{ tezpay_config_version: 0 baker: \"\" payouts: { wallet_mode: local-private-key payout_mode: actual balance_check_mode: protocol fee: 0.05 transaction_gas_limit_buffer: 100 transaction_deserialization_gas_buffer: 2 minimum_delay_blocks: 500 maximum_delay_blocks: 1500 simulation_batch_size: 50 } delegators: { requirements: { below_minimum_reward_destination: none } } income_recipients: {} network: { rpc_url: https://eu.rpc.tez.capital/ tzkt_url: https://api.tzkt.io/ protocol_rewards_url: https://protocol-rewards.tez.capital/ explorer: https://tzkt.io/ } overdelegation: { protect: true } } ","categories":"","description":"","excerpt":"{ tezpay_config_version: 0 baker: \"\" payouts: { wallet_mode: local-private-key payout_mode: actual balance_check_mode: protocol fee: 0.05 transaction_gas_limit_buffer: 100 …","ref":"/tezpay/configuration/examples/default/","tags":"","title":"default"},{"body":"NOTE: all bellow examples are just sample data to showcase fields used in data passed to hooks.\nafter_candidates_generated This hook is capable of mutating data.\n{ \"cycle\": 580, \"candidates\": [ { \"source\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"recipient\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"fee_rate\": 5, \"staked_balance\": \"1000000000\", \"delegated_balance\": \"1000000000\", \"is_invalid\": true, \"is_emptied\": true, \"is_baker_paying_tx_fee\": true, \"is_baker_paying_allocation_tx_fee\": true, \"invalid_because\": \"reason\" } ] } after_bonds_distributed This hook is capable of mutating data.\n{ \"cycle\": 580, \"candidates\": [ { \"source\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"recipient\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"fee_rate\": 5, \"staked_balance\": \"1000000000\", \"delegated_balance\": \"1000000000\", \"is_invalid\": true, \"is_emptied\": true, \"is_baker_paying_tx_fee\": true, \"is_baker_paying_allocation_tx_fee\": true, \"invalid_because\": \"reason\", \"bonds_amount\": \"1000000000\", \"tx_kind\": \"fa1\", \"fa_token_id\": \"10\", \"fa_contract\": \"KT18amZmM5W7qDWVt2pH6uj7sCEd3kbzLrHT\" } ] } check_balance This hook is NOT capable of mutating data.\n{ \"skip_tez_check\": true, \"is_sufficient\": true, \"message\": \"This message is used to carry errors from hook to the caller.\", \"payouts\": [ { \"source\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"recipient\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"fee_rate\": 5, \"staked_balance\": \"1000000000\", \"delegated_balance\": \"1000000000\", \"is_invalid\": true, \"is_emptied\": true, \"is_baker_paying_tx_fee\": true, \"is_baker_paying_allocation_tx_fee\": true, \"invalid_because\": \"reason\", \"bonds_amount\": \"1000000000\", \"tx_kind\": \"fa1\", \"fa_token_id\": \"10\", \"fa_contract\": \"KT18amZmM5W7qDWVt2pH6uj7sCEd3kbzLrHT\", \"fee\": \"1000000000\" } ] } on_fees_collection This hook is capable of mutating data.\n{ \"cycle\": 580, \"candidates\": [ { \"source\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"recipient\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"fee_rate\": 5, \"staked_balance\": \"1000000000\", \"delegated_balance\": \"1000000000\", \"is_invalid\": true, \"is_emptied\": true, \"is_baker_paying_tx_fee\": true, \"is_baker_paying_allocation_tx_fee\": true, \"invalid_because\": \"reason\", \"bonds_amount\": \"1000000000\", \"tx_kind\": \"fa1\", \"fa_token_id\": \"10\", \"fa_contract\": \"KT18amZmM5W7qDWVt2pH6uj7sCEd3kbzLrHT\", \"fee\": \"1000000000\" } ] } after_payouts_blueprint_generated This hook is NOT capable of mutating data currently.\n{ \"cycles\": 1, \"payouts\": [ { \"baker\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"delegator\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"cycle\": 1, \"recipient\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"kind\": \"invalid\", \"tx_kind\": \"fa1\", \"fa_token_id\": \"10\", \"fa_contract\": \"KT18amZmM5W7qDWVt2pH6uj7sCEd3kbzLrHT\", \"delegator_balance\": \"1000000000\", \"amount\": \"1000000000\", \"fee_rate\": 5, \"fee\": \"1000000000\", \"op_limits\": { \"transaction_fee\": 1, \"storage_limit\": 1, \"gas_limit\": 1, \"deserialization_gas_limit\": 1, \"allocation_burn\": 1, \"storage_burn\": 1 }, \"note\": \"reason\" } ], \"summary\": { \"cycle\": 1, \"delegators\": 2, \"paid_delegators\": 1, \"own_staked_balance\": \"1000000000\", \"own_delegated_balance\": \"0\", \"external_staked_balance\": \"0\", \"external_delegated_balance\": \"0\", \"cycle_fees\": \"1000000000\", \"cycle_rewards\": \"1000000000\", \"distributed_rewards\": \"1000000000\", \"bond_income\": \"1000000000\", \"fee_income\": \"1000000000\", \"total_income\": \"1000000000\", \"donated_bonds\": \"1000000000\", \"donated_fees\": \"1000000000\", \"donated_total\": \"1000000000\", \"timestamp\": \"2023-01-01T00:00:00Z\" } } after_payouts_prepared This hook is capable of mutating data currently.\n{ \"recipes\": null, \"payouts\": [ { \"baker\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"delegator\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"cycle\": 1, \"recipient\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"kind\": \"invalid\", \"tx_kind\": \"fa1\", \"fa_token_id\": \"10\", \"fa_contract\": \"KT18amZmM5W7qDWVt2pH6uj7sCEd3kbzLrHT\", \"delegator_balance\": \"1000000000\", \"amount\": \"1000000000\", \"fee_rate\": 5, \"fee\": \"1000000000\", \"op_limits\": { \"transaction_fee\": 1, \"storage_limit\": 1, \"gas_limit\": 1, \"deserialization_gas_limit\": 1, \"allocation_burn\": 1, \"storage_burn\": 1 }, \"note\": \"reason\" } ], \"invalid_payouts\": null, \"reports_of_past_succesful_payouts\": [ { \"id\": \"fd8d0230c9d70458\", \"baker\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"timestamp\": \"2024-09-07T09:25:23.379448699Z\", \"cycle\": 1, \"kind\": \"invalid\", \"tx_kind\": \"fa1\", \"contract\": \"KT18amZmM5W7qDWVt2pH6uj7sCEd3kbzLrHT\", \"token_id\": \"10\", \"delegator\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"delegator_balance\": \"1000000000\", \"recipient\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"amount\": \"1000000000\", \"fee_rate\": 5, \"fee\": \"1000000000\", \"tx_fee\": 1, \"op_hash\": \"oneDGhZacw99EEFaYDTtWfz5QEhUW3PPVFsHa7GShnLPuDn7gSd\", \"success\": true, \"note\": \"reason\" } ] } ","categories":"","description":"","excerpt":"NOTE: all bellow examples are just sample data to showcase fields used in data passed to hooks.\nafter_candidates_generated This hook is capable of mutating data.\n{ \"cycle\": 580, \"candidates\": [ { …","ref":"/tezpay/extensions/reference/hooks/","tags":"","title":"Hooks"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tezbake/reference/","tags":"","title":"Reference"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tezpay/reference/","tags":"","title":"Reference"},{"body":"{ # version of the configuration file tezpay_config_version: 0 # baker's public key hash baker: \"\" # payout configuration payouts: { # wallet mode to use for signing transactions, can be 'local-private-key' or 'remote-signer' wallet_mode: local-private-key # payout mode to use, can be 'actual' or 'ideal' payout_mode: ideal # balance check mode to use, can be 'protocol' or 'tzkt' balance_check_mode: protocol # fee to charge delegators for the payout (portion of the reward as decimal, e.g. 0.075 for 7.5%) fee: 0.075 # if true, baker pays the transaction fee baker_pays_transaction_fee: true # if true, baker pays the allocation transaction fee baker_pays_allocation_fee: true # minimum amount to pay out to delegators, if the amount is less, the payout will be ignored minimum_payout_amount: 10.5 # buffer for transaction gas limit transaction_gas_limit_buffer: 200 # buffer for transaction deserialization gas transaction_deserialization_gas_buffer: 5 # buffer for transaction fee transaction_fee_buffer: 10 # buffer for KT transaction fee kt_transaction_fee_buffer: 50 # minimum delay in blocks before the payout is executed minimum_delay_blocks: 10 # maximum delay in blocks before the payout is executed maximum_delay_blocks: 250 } # delegators configuration delegators: { # Requirements delegators have to meet requirements: { # Minimum balance of tez a delegator has to have to be considered for payout minimum_balance: 0.5 # Reward destination for delegators with balance below the minimum balance (possible values: 'none', 'everyone') below_minimum_reward_destination: everyone } # List of only delegator addresses to consider, if empty all delegators are considered prefilter: [ tz1P6WKJu2rcbxKiKRZHKQKmKrpC9TfW1AwM tz1hZvgjekGo7DmQjWh7XnY5eLQD8wNYPczE ] # List of delegator addresses to ignore - wont be included in reward set, rewards will be redistributed ignore: [ tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU tz1burnburnburnburnburnburnburjAYjjX ] # Overrides for specific delegators overrides: { tz1P6WKJu2rcbxKiKRZHKQKmKrpC9TfW1AwM: { # Redirects payout to the recipient 'address' recipient: \"\" # Overrides the fee for the delegator fee: 0 # Overrides the minimum balance requirement for the delegator minimum_balance: 2.5 } tz1hZvgjekGo7DmQjWh7XnY5eLQD8wNYPczE: { # Redirects payout to the recipient 'address' recipient: \"\" # The maximum balance for the delegator (for overdelegation situation you can limit how much of a delegator balance is taken into account) maximum_balance: 1000 } } # Shortcuts for overriding fees for specific delegators fee_overrides: { .5: [ \"\" ] 1: [ tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU tz1burnburnburnburnburnburnburjAYjjX ] } } # income recipients configuration income_recipients: { # list of addresses and their share of the bonds bonds: { tz1P6WKJu2rcbxKiKRZHKQKmKrpC9TfW1AwM: 0.455 tz1X7U9XxVz6NDxL4DSZhijME61PW45bYUJE: 0.545 } # list of addresses and their share of the fees fees: { tz1P6WKJu2rcbxKiKRZHKQKmKrpC9TfW1AwM: 0.455 tz1X7U9XxVz6NDxL4DSZhijME61PW45bYUJE: 0.545 } # share of the rewards to donate donate: 0.025 # share of the fees to donate (if not set, 'donate' is used) donate_fees: 0.05 # share of the bonds to donate (if not set, 'donate' is used) donate_bonds: 0.03 # list of addresses and their share of the donations donations: { tz1P6WKJu2rcbxKiKRZHKQKmKrpC9TfW1AwM: 0.1 tz1UGkfyrT9yBt6U5PV7Qeui3pt3a8jffoWv: 0.9 } } # tezos network configuration network: { # Url to rpc endpoint rpc_url: https://eu.rpc.tez.capital/ # Url to tzkt endpoint tzkt_url: https://api.tzkt.io/ # Url to protocol rewards endpoint protocol_rewards_url: https://protocol-rewards.tez.capital/ # Url to block explorer explorer: https://tzstats.com/ # if true, smart contracts will not be paid out (used for testing) ignore_kt: true } # overdelegation protection configuration overdelegation: { protect: true } # notification configurations notifications: [ { type: discord webhook_url: https://my-discord-webhook.com/ message_template: my awesome message } { type: discord webhook_url: https://my-admin-discord-webhook.com/ message_template: my awesome message admin: true } { type: discord webhook_id: webhook id webhook_token: webhook token message_template: my awesome message } { type: twitter access_token: your access token access_token_secret: your access token secret consumer_key: your consumer key consumer_secret: your consumer secret message_template: my awesome message } { type: telegram api_token: your api token receivers: [ list of chat numbers without quotes -1234567890 ] message_template: my awesome message } { type: email sender: my@email.is smtp_server: smtp.gmail.com:443 smtp_identity: \"\" smtp_username: my@email.is smtp_password: password123 recipients: [ my-follower1@email.is my-follower2@email.is ] message_template: my awesome message } { type: external path: path to external notificator binary args: [ --kind \u003ckind\u003e \u003cdata\u003e ] } ] # extensions (for custom functionality) extensions: [ { name: log-extension command: python3 args: [ /path/to/my/extension.py ] kind: stdio configuration: { LOG_FILE: path/to/my/extension.log } hooks: [ { id: all mode: ro } ] } { name: fee-extension command: /path/to/my/extension.bin args: [ --config /path/to/my/extension.config ] kind: stdio configuration: { FEE: 0 TOKEN: \"1\" CONTRACT: KT1Hkg6qgV3VykjgUXKbWcU3h6oJ1qVxUxZV } hooks: [ { id: after_candidates_generated mode: rw } ] } ] # disables analytics, please consider leaving it enabled🙏 disable_analytics: true } ","categories":"","description":"","excerpt":"{ # version of the configuration file tezpay_config_version: 0 # baker's public key hash baker: \"\" # payout configuration payouts: { # wallet mode to use for signing transactions, can be …","ref":"/tezpay/configuration/examples/sample/","tags":"","title":"sample"},{"body":"{ #===================================================================================================== # This is tezpay starter configuration template. Please refer to https://docs.tez.capital/tezpay/ # - for default configuration (list of default values) see https://docs.tez.capital/tezpay/configuration/examples/default/. # - for sample of all available fields see https://docs.tez.capital/tezpay/configuration/examples/sample/. #===================================================================================================== # version of the configuration file tezpay_config_version: 0 # baker's public key hash baker: your-baker-address # payout configuration payouts: { # balance check mode to use, can be 'protocol' or 'tzkt' balance_check_mode: protocol # fee to charge delegators for the payout (portion of the reward as decimal, e.g. 0.075 for 7.5%) fee: 0.1 # minimum amount to pay out to delegators, if the amount is less, the payout will be ignored minimum_payout_amount: 0.01 } # delegators configuration delegators: { # Requirements delegators have to meet requirements: { # Minimum balance of tez a delegator has to have to be considered for payout minimum_balance: 10 } } # overdelegation protection configuration overdelegation: { protect: true } } ","categories":"","description":"","excerpt":"{ #===================================================================================================== # This is tezpay starter configuration template. Please refer to …","ref":"/tezpay/configuration/examples/starter/","tags":"","title":"starter"},{"body":"docs/cmd/tezbake.md## tezbake\ntezbake CLI\nSynopsis tezbake CLI Copyright © 2023 tez.capital\nOptions -h, --help help for tezbake -l, --log-level string Sets output log format (json/text/auto) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string Path to bake buddy instance (default \"/bake-buddy\") SEE ALSO tezbake apps\t- Prints BB CLI apps. tezbake bootstrap-node\t- Bootstraps Bake Buddy’s Tezos node. tezbake erase-ami-cache\t- Erases ami cache. tezbake info\t- Prints runtime information about BB. tezbake list-ledgers\t- Prints list of available ledgers. tezbake node\t- Passes args through to node app. tezbake peak\t- Passes args through to peak app. tezbake register-key\t- Register key for baking. tezbake remove\t- Removes BB. tezbake setup\t- Setups BB. tezbake setup-ami\t- Install ami and eli. tezbake setup-ledger\t- Setup ledger for baking. tezbake setup-soft-wallet\t- Setup soft wallet for baking. tezbake signer\t- Passes args through to signer app. tezbake start\t- Starts BB. tezbake stop\t- Stops BB. tezbake upgrade\t- Upgrades BB. tezbake version\t- Prints BB CLI version. tezbake vote\t- (DEPRECATED) Cast vote for proposal/s. Auto generated by spf13/cobra on 14-Oct-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezbake.md## tezbake\ntezbake CLI\nSynopsis tezbake CLI Copyright © 2023 tez.capital\nOptions -h, --help help for tezbake -l, --log-level string Sets output log format (json/text/auto) (default …","ref":"/tezbake/reference/cmd/tezbake/","tags":"","title":"tezbake"},{"body":"docs/cmd/tezbake_apps.md## tezbake apps\nPrints BB CLI apps.\nSynopsis Prints BakeBuddy CLI apps.\ntezbake apps [flags] Options -h, --help help for apps Options inherited from parent commands -l, --log-level string Sets output log format (json/text/auto) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string Path to bake buddy instance (default \"/bake-buddy\") SEE ALSO tezbake\t- tezbake CLI Auto generated by spf13/cobra on 14-Oct-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezbake_apps.md## tezbake apps\nPrints BB CLI apps.\nSynopsis Prints BakeBuddy CLI apps.\ntezbake apps [flags] Options -h, --help help for apps Options inherited from parent commands -l, …","ref":"/tezbake/reference/cmd/tezbake_apps/","tags":"","title":"tezbake_apps"},{"body":"docs/cmd/tezbake_bootstrap-node.md## tezbake bootstrap-node\nBootstraps Bake Buddy’s Tezos node.\nSynopsis Downloads bootstrap and imports it into node databse.\ntezbake bootstrap-node [--no-check] \u003curl\u003e \u003cblock hash\u003e [flags] Options -h, --help help for bootstrap-node --no-check bootstraps node from tarball without veryfing snapshot integrity Options inherited from parent commands -l, --log-level string Sets output log format (json/text/auto) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string Path to bake buddy instance (default \"/bake-buddy\") SEE ALSO tezbake\t- tezbake CLI Auto generated by spf13/cobra on 14-Oct-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezbake_bootstrap-node.md## tezbake bootstrap-node\nBootstraps Bake Buddy’s Tezos node.\nSynopsis Downloads bootstrap and imports it into node databse.\ntezbake bootstrap-node [--no-check] \u003curl\u003e …","ref":"/tezbake/reference/cmd/tezbake_bootstrap-node/","tags":"","title":"tezbake_bootstrap-node"},{"body":"docs/cmd/tezbake_erase-ami-cache.md## tezbake erase-ami-cache\nErases ami cache.\nSynopsis Erases ami package cache.\ntezbake erase-ami-cache [flags] Options -h, --help help for erase-ami-cache Options inherited from parent commands -l, --log-level string Sets output log format (json/text/auto) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string Path to bake buddy instance (default \"/bake-buddy\") SEE ALSO tezbake\t- tezbake CLI Auto generated by spf13/cobra on 14-Oct-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezbake_erase-ami-cache.md## tezbake erase-ami-cache\nErases ami cache.\nSynopsis Erases ami package cache.\ntezbake erase-ami-cache [flags] Options -h, --help help for erase-ami-cache Options …","ref":"/tezbake/reference/cmd/tezbake_erase-ami-cache/","tags":"","title":"tezbake_erase-ami-cache"},{"body":"docs/cmd/tezbake_get-rights.md## tezbake get-rights\nGets baking and endorsing rights.\nSynopsis Gets baking and endorsing rights of BB instance.\ntezbake get-rights [flags] Options -f, --future-blocks int Sets how many future blocks should be probed for rights. (default 60) -h, --help help for get-rights Options inherited from parent commands -l, --log-level string Sets output log format (json/text/auto) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string Path to bake buddy instance (default \"/bake-buddy\") SEE ALSO tezbake\t- tezbake CLI Auto generated by spf13/cobra on 24-Jan-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezbake_get-rights.md## tezbake get-rights\nGets baking and endorsing rights.\nSynopsis Gets baking and endorsing rights of BB instance.\ntezbake get-rights [flags] Options -f, --future-blocks …","ref":"/tezbake/reference/cmd/tezbake_get-rights/","tags":"","title":"tezbake_get-rights"},{"body":"docs/cmd/tezbake_import-key.md## tezbake import-key\nImports key from ledger.\nSynopsis Imports key from selected ledger.\ntezbake import-key [flags] Options --alias string alias ofkey to be imported (default \"baker\") -d, --derivation-path string Derivation path you want to use. -f, --force Force key import. (overwrites existing) -h, --help help for import-key -i, --ledger-id string Ledger id to import key from. -n, --node import key to node -s, --signer import key to signer Options inherited from parent commands -l, --log-level string Sets output log format (json/text/auto) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string Path to bake buddy instance (default \"/bake-buddy\") SEE ALSO tezbake\t- tezbake CLI Auto generated by spf13/cobra on 22-May-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezbake_import-key.md## tezbake import-key\nImports key from ledger.\nSynopsis Imports key from selected ledger.\ntezbake import-key [flags] Options --alias string alias ofkey to be imported …","ref":"/tezbake/reference/cmd/tezbake_import-key/","tags":"","title":"tezbake_import-key"},{"body":"docs/cmd/tezbake_info.md## tezbake info\nPrints runtime information about BB.\nSynopsis Collects and prints runtime information about BB instance.\ntezbake info [flags] Options -h, --help help for info --node Prints info for node. --node-chain --node-services --node-simple --node-voting --pay Prints info for pay. --pay-chain --pay-services --pay-simple --pay-voting --peak Prints info for peak. --peak-services --signer Prints info for signer. --signer-baking --signer-services --signer-simple --timeout int How long to wait for collecting info. (default 5) Options inherited from parent commands -l, --log-level string Sets output log format (json/text/auto) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string Path to bake buddy instance (default \"/bake-buddy\") SEE ALSO tezbake\t- tezbake CLI Auto generated by spf13/cobra on 14-Oct-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezbake_info.md## tezbake info\nPrints runtime information about BB.\nSynopsis Collects and prints runtime information about BB instance.\ntezbake info [flags] Options -h, --help help for info …","ref":"/tezbake/reference/cmd/tezbake_info/","tags":"","title":"tezbake_info"},{"body":"docs/cmd/tezbake_list-ledgers.md## tezbake list-ledgers\nPrints list of available ledgers.\nSynopsis Collects and prits list of avaialble ledger ids.\ntezbake list-ledgers [flags] Options -h, --help help for list-ledgers Options inherited from parent commands -l, --log-level string Sets output log format (json/text/auto) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string Path to bake buddy instance (default \"/bake-buddy\") SEE ALSO tezbake\t- tezbake CLI Auto generated by spf13/cobra on 14-Oct-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezbake_list-ledgers.md## tezbake list-ledgers\nPrints list of available ledgers.\nSynopsis Collects and prits list of avaialble ledger ids.\ntezbake list-ledgers [flags] Options -h, --help help …","ref":"/tezbake/reference/cmd/tezbake_list-ledgers/","tags":"","title":"tezbake_list-ledgers"},{"body":"docs/cmd/tezbake_modules.md## tezbake modules\nPrints BB CLI modules.\nSynopsis Prints BakeBuddy CLI modules.\ntezbake modules [flags] Options -h, --help help for modules Options inherited from parent commands -l, --log-level string Sets output log format (json/text/auto) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string Path to bake buddy instance (default \"/bake-buddy\") SEE ALSO tezbake\t- tezbake CLI Auto generated by spf13/cobra on 17-Feb-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezbake_modules.md## tezbake modules\nPrints BB CLI modules.\nSynopsis Prints BakeBuddy CLI modules.\ntezbake modules [flags] Options -h, --help help for modules Options inherited from parent …","ref":"/tezbake/reference/cmd/tezbake_modules/","tags":"","title":"tezbake_modules"},{"body":"docs/cmd/tezbake_node.md## tezbake node\nPasses args through to node app.\nSynopsis Passes args through to node app.\ntezbake node [flags] Options -h, --help help for node Options inherited from parent commands -l, --log-level string Sets output log format (json/text/auto) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string Path to bake buddy instance (default \"/bake-buddy\") SEE ALSO tezbake\t- tezbake CLI Auto generated by spf13/cobra on 14-Oct-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezbake_node.md## tezbake node\nPasses args through to node app.\nSynopsis Passes args through to node app.\ntezbake node [flags] Options -h, --help help for node Options inherited from parent …","ref":"/tezbake/reference/cmd/tezbake_node/","tags":"","title":"tezbake_node"},{"body":"docs/cmd/tezbake_peak.md## tezbake peak\nPasses args through to peak app.\nSynopsis Passes args through to peak app.\ntezbake peak [flags] Options -h, --help help for peak Options inherited from parent commands -l, --log-level string Sets output log format (json/text/auto) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string Path to bake buddy instance (default \"/bake-buddy\") SEE ALSO tezbake\t- tezbake CLI Auto generated by spf13/cobra on 14-Oct-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezbake_peak.md## tezbake peak\nPasses args through to peak app.\nSynopsis Passes args through to peak app.\ntezbake peak [flags] Options -h, --help help for peak Options inherited from parent …","ref":"/tezbake/reference/cmd/tezbake_peak/","tags":"","title":"tezbake_peak"},{"body":"docs/cmd/tezbake_register-key.md## tezbake register-key\nRegister key for baking.\nSynopsis Registers key for baking.\ntezbake register-key [flags] Options -h, --help help for register-key Options inherited from parent commands -l, --log-level string Sets output log format (json/text/auto) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string Path to bake buddy instance (default \"/bake-buddy\") SEE ALSO tezbake\t- tezbake CLI Auto generated by spf13/cobra on 14-Oct-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezbake_register-key.md## tezbake register-key\nRegister key for baking.\nSynopsis Registers key for baking.\ntezbake register-key [flags] Options -h, --help help for register-key Options …","ref":"/tezbake/reference/cmd/tezbake_register-key/","tags":"","title":"tezbake_register-key"},{"body":"docs/cmd/tezbake_remove.md## tezbake remove\nRemoves BB.\nSynopsis Removes BB instance.\ntezbake remove [flags] Options -a, --all Removes all files related to BB instance. -h, --help help for remove --node Removes node. --pay Removes pay. --peak Removes peak. --signer Removes signer. Options inherited from parent commands -l, --log-level string Sets output log format (json/text/auto) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string Path to bake buddy instance (default \"/bake-buddy\") SEE ALSO tezbake\t- tezbake CLI Auto generated by spf13/cobra on 14-Oct-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezbake_remove.md## tezbake remove\nRemoves BB.\nSynopsis Removes BB instance.\ntezbake remove [flags] Options -a, --all Removes all files related to BB instance. -h, --help help for remove …","ref":"/tezbake/reference/cmd/tezbake_remove/","tags":"","title":"tezbake_remove"},{"body":"docs/cmd/tezbake_setup.md## tezbake setup\nSetups BB.\nSynopsis Installs and configures BB instance.\ntezbake setup [flags] Options --branch string Select package release branch you want to setup (addets node and signer app only). (default \"main\") --force Force setup - potentially overwriting existing installation. -h, --help help for setup -i, --id string Id of BB instance. (default \"bb-default\") --node Setups node. --node-branch string Sets node configuration. --node-configuration string Sets node configuration. (default \"{}\") --node-version string Sets node configuration. (default \"latest\") --pay Setups pay. --pay-branch string Sets pay configuration. --pay-configuration string Sets pay configuration. (default \"{}\") --pay-version string Sets pay configuration. (default \"latest\") --peak Setups peak. --peak-branch string Sets peak configuration. --peak-configuration string Sets peak configuration. (default \"{}\") --peak-version string Sets peak configuration. (default \"latest\") --remote-auth string pass|key:\u003cpath to key\u003e (experimental) --remote-elevate string only 'sudo' supported now (experimental) --remote-node string username:\u003cssh key file\u003e@address (experimental) --remote-path string where on remote install node - defaults to '/bake-buddy/node' (experimental) (default \"/bake-buddy\") --remote-reset Resets and reconfigures remote node locator. (experimental) --remote-user string Sets user remote node will be operated under. (experimental, ignored if remote uses elevation) (default \"bb\") -a, --setup-ami Install latest ami during the BB setup. --signer Setups signer. --signer-branch string Sets signer configuration. --signer-configuration string Sets signer configuration. (default \"{}\") --signer-version string Sets signer configuration. (default \"latest\") -u, --user string User you want to operate BB under. (default \"runner\") Options inherited from parent commands -l, --log-level string Sets output log format (json/text/auto) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string Path to bake buddy instance (default \"/bake-buddy\") SEE ALSO tezbake\t- tezbake CLI Auto generated by spf13/cobra on 14-Oct-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezbake_setup.md## tezbake setup\nSetups BB.\nSynopsis Installs and configures BB instance.\ntezbake setup [flags] Options --branch string Select package release branch you want to setup (addets …","ref":"/tezbake/reference/cmd/tezbake_setup/","tags":"","title":"tezbake_setup"},{"body":"docs/cmd/tezbake_setup-ami.md## tezbake setup-ami\nInstall ami and eli.\nSynopsis Install latest ami and eli.\ntezbake setup-ami [flags] Options -h, --help help for setup-ami --remote-node string (Not available). Options inherited from parent commands -l, --log-level string Sets output log format (json/text/auto) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string Path to bake buddy instance (default \"/bake-buddy\") SEE ALSO tezbake\t- tezbake CLI Auto generated by spf13/cobra on 14-Oct-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezbake_setup-ami.md## tezbake setup-ami\nInstall ami and eli.\nSynopsis Install latest ami and eli.\ntezbake setup-ami [flags] Options -h, --help help for setup-ami --remote-node string (Not …","ref":"/tezbake/reference/cmd/tezbake_setup-ami/","tags":"","title":"tezbake_setup-ami"},{"body":"docs/cmd/tezbake_setup-ledger.md## tezbake setup-ledger\nSetup ledger for baking.\nSynopsis Setups ledger for baking.\ntezbake setup-ledger [flags] Options --authorize Authorize ledger for baking. --chain-id string Id of chain to be used for baking. -f, --force Force key import. (overwrites existing) -h, --help help for setup-ledger --hwm string High watermark to be used during baking. --import-key [string][=true] Import key from ledger (optionally specify derivation path) (default ) --key-alias string Alias ofkey to be imported (default \"baker\") --ledger-id string Ledger id to import key from (affects import-key only) --no-udev string Skip udev rules installation. (linux only) -n, --node Import key to node (affects import-key only) --platform [string][=true] Prepare platform for ledger (optionally specify platform to override) (default ) --protocol string Protocol hash to be used during setup-ledger. -s, --signer Import key to signer (affects import-key only) Options inherited from parent commands -l, --log-level string Sets output log format (json/text/auto) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string Path to bake buddy instance (default \"/bake-buddy\") SEE ALSO tezbake\t- tezbake CLI Auto generated by spf13/cobra on 14-Oct-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezbake_setup-ledger.md## tezbake setup-ledger\nSetup ledger for baking.\nSynopsis Setups ledger for baking.\ntezbake setup-ledger [flags] Options --authorize Authorize ledger for baking. …","ref":"/tezbake/reference/cmd/tezbake_setup-ledger/","tags":"","title":"tezbake_setup-ledger"},{"body":"docs/cmd/tezbake_setup-soft-wallet.md## tezbake setup-soft-wallet\nSetup soft wallet for baking.\nSynopsis Setups soft wallet for baking.\ntezbake setup-soft-wallet [flags] Options -f, --force Force key import. (overwrites existing) --generate string Generate key (default \"ed25519\") -h, --help help for setup-soft-wallet --import-key string Import key --key-alias string Alias ofkey to be imported (default \"baker\") -n, --node Import key to node (affects import-key only) -s, --signer Import key to signer (affects import-key only) Options inherited from parent commands -l, --log-level string Sets output log format (json/text/auto) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string Path to bake buddy instance (default \"/bake-buddy\") SEE ALSO tezbake\t- tezbake CLI Auto generated by spf13/cobra on 14-Oct-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezbake_setup-soft-wallet.md## tezbake setup-soft-wallet\nSetup soft wallet for baking.\nSynopsis Setups soft wallet for baking.\ntezbake setup-soft-wallet [flags] Options -f, --force Force key …","ref":"/tezbake/reference/cmd/tezbake_setup-soft-wallet/","tags":"","title":"tezbake_setup-soft-wallet"},{"body":"docs/cmd/tezbake_signer.md## tezbake signer\nPasses args through to signer app.\nSynopsis Passes args through to signer app.\ntezbake signer [flags] Options -h, --help help for signer Options inherited from parent commands -l, --log-level string Sets output log format (json/text/auto) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string Path to bake buddy instance (default \"/bake-buddy\") SEE ALSO tezbake\t- tezbake CLI Auto generated by spf13/cobra on 14-Oct-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezbake_signer.md## tezbake signer\nPasses args through to signer app.\nSynopsis Passes args through to signer app.\ntezbake signer [flags] Options -h, --help help for signer Options inherited …","ref":"/tezbake/reference/cmd/tezbake_signer/","tags":"","title":"tezbake_signer"},{"body":"docs/cmd/tezbake_start.md## tezbake start\nStarts BB.\nSynopsis Starts services of BB instance.\ntezbake start [flags] Options -h, --help help for start --node Starts node's services. --pay Starts pay's services. --peak Starts peak's services. --signer Starts signer's services. Options inherited from parent commands -l, --log-level string Sets output log format (json/text/auto) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string Path to bake buddy instance (default \"/bake-buddy\") SEE ALSO tezbake\t- tezbake CLI Auto generated by spf13/cobra on 14-Oct-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezbake_start.md## tezbake start\nStarts BB.\nSynopsis Starts services of BB instance.\ntezbake start [flags] Options -h, --help help for start --node Starts node's services. --pay Starts pay's …","ref":"/tezbake/reference/cmd/tezbake_start/","tags":"","title":"tezbake_start"},{"body":"docs/cmd/tezbake_stop.md## tezbake stop\nStops BB.\nSynopsis Stops services of BB instance.\ntezbake stop [flags] Options -h, --help help for stop --node Stops node's services. --pay Stops pay's services. --peak Stops peak's services. --signer Stops signer's services. Options inherited from parent commands -l, --log-level string Sets output log format (json/text/auto) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string Path to bake buddy instance (default \"/bake-buddy\") SEE ALSO tezbake\t- tezbake CLI Auto generated by spf13/cobra on 14-Oct-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezbake_stop.md## tezbake stop\nStops BB.\nSynopsis Stops services of BB instance.\ntezbake stop [flags] Options -h, --help help for stop --node Stops node's services. --pay Stops pay's …","ref":"/tezbake/reference/cmd/tezbake_stop/","tags":"","title":"tezbake_stop"},{"body":"docs/cmd/tezbake_upgrade.md## tezbake upgrade\nUpgrades BB.\nSynopsis Upgrades BB instance.\ntezbake upgrade [flags] Options -h, --help help for upgrade --node Upgrade node. --pay Upgrade pay. --peak Upgrade peak. -a, --setup-ami Install latest ami during the BB upgrade. --signer Upgrade signer. -s, --upgrade-storage Upgrade storage during the upgrade. Options inherited from parent commands -l, --log-level string Sets output log format (json/text/auto) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string Path to bake buddy instance (default \"/bake-buddy\") SEE ALSO tezbake\t- tezbake CLI Auto generated by spf13/cobra on 14-Oct-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezbake_upgrade.md## tezbake upgrade\nUpgrades BB.\nSynopsis Upgrades BB instance.\ntezbake upgrade [flags] Options -h, --help help for upgrade --node Upgrade node. --pay Upgrade pay. --peak …","ref":"/tezbake/reference/cmd/tezbake_upgrade/","tags":"","title":"tezbake_upgrade"},{"body":"docs/cmd/tezbake_version.md## tezbake version\nPrints BB CLI version.\nSynopsis Prints BakeBuddy CLI version.\ntezbake version [flags] Options -a, --all Prints version of all BB instance packages/binaries. -b, --binaries Prints versions of binaries. -h, --help help for version --node Prints versions of node. --packages Prints versions packages. --pay Prints versions of pay. --peak Prints versions of peak. --signer Prints versions of signer. Options inherited from parent commands -l, --log-level string Sets output log format (json/text/auto) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string Path to bake buddy instance (default \"/bake-buddy\") SEE ALSO tezbake\t- tezbake CLI Auto generated by spf13/cobra on 14-Oct-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezbake_version.md## tezbake version\nPrints BB CLI version.\nSynopsis Prints BakeBuddy CLI version.\ntezbake version [flags] Options -a, --all Prints version of all BB instance …","ref":"/tezbake/reference/cmd/tezbake_version/","tags":"","title":"tezbake_version"},{"body":"docs/cmd/tezbake_vote.md## tezbake vote\n(DEPRECATED) Cast vote for proposal/s.\nSynopsis (DEPRECATED) Use ‘https://gov.tez.capital/' instead.\nSubmits vote for proposal/s based on provided voting period. Exploration: `tezbake vote --period exploration \u003cproposal\u003e yay|nay|pass` Proposal: `tezbake vote --period proposal \u003cproposal1\u003e \u003cproposal2\u003e` Promotion: `tezbake vote --period promotion \u003cproposal\u003e yay|nay|pass` tezbake vote [flags] Options -h, --help help for vote --period string Sets period to vote on. (default \"unknown\") Options inherited from parent commands -l, --log-level string Sets output log format (json/text/auto) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string Path to bake buddy instance (default \"/bake-buddy\") SEE ALSO tezbake\t- tezbake CLI Auto generated by spf13/cobra on 14-Oct-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezbake_vote.md## tezbake vote\n(DEPRECATED) Cast vote for proposal/s.\nSynopsis (DEPRECATED) Use ‘https://gov.tez.capital/' instead.\nSubmits vote for proposal/s based on provided voting …","ref":"/tezbake/reference/cmd/tezbake_vote/","tags":"","title":"tezbake_vote"},{"body":"docs/cmd/tezpay.md## tezpay\nTEZPAY\nSynopsis TEZPAY dev - the tezos reward distributor Copyright © 2024 alis.is\ntezpay [flags] Options --disable-donation-prompt Disable donation prompt -h, --help help for tezpay -l, --log-level string Sets log level format (trace/debug/info/warn/error) (default \"info\") --log-server string launches log server at specified address -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string path to working directory (default \".\") --pay-only-address-prefix string Pays only to addresses starting with the prefix (e.g. KT, usually you do not want to use this, just for recovering in case of issues) --signer string Override signer --skip-version-check Skip version check --version Prints version SEE ALSO tezpay continual\t- continual payout tezpay generate-payouts\t- generate payouts tezpay import-configuration\t- seed configuration from tezpay pay\t- manual payout tezpay pay-date-range\t- EXPERIMENTAL: payout for date range tezpay statistics\t- prints earning stats tezpay test-extensions\t- extensions test tezpay test-notify\t- notification test tezpay transfer\t- transfers tez to specified address tezpay version\t- prints tezpay version Auto generated by spf13/cobra on 7-Sep-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezpay.md## tezpay\nTEZPAY\nSynopsis TEZPAY dev - the tezos reward distributor Copyright © 2024 alis.is\ntezpay [flags] Options --disable-donation-prompt Disable donation prompt -h, --help help …","ref":"/tezpay/reference/cmd/tezpay/","tags":"","title":"tezpay"},{"body":"docs/cmd/tezpay_continual.md## tezpay continual\ncontinual payout\nSynopsis runs payout until stopped manually\ntezpay continual [flags] Options -c, --cycle int initial cycle --dry-run skips payout wallet balance check -e, --end-cycle int end cycle -a, --force-confirmation-prompt ask for confirmation on each payout -h, --help help for continual --no-separate-fa disables fa transfers separation (mixes txs and fa transfers within batches) --no-separate-sc disables smart contract separation (mixes txs and smart contract calls within batches) Options inherited from parent commands --disable-donation-prompt Disable donation prompt -l, --log-level string Sets log level format (trace/debug/info/warn/error) (default \"info\") --log-server string launches log server at specified address -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string path to working directory (default \".\") --pay-only-address-prefix string Pays only to addresses starting with the prefix (e.g. KT, usually you do not want to use this, just for recovering in case of issues) --signer string Override signer --skip-version-check Skip version check SEE ALSO tezpay\t- TEZPAY Auto generated by spf13/cobra on 7-Sep-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezpay_continual.md## tezpay continual\ncontinual payout\nSynopsis runs payout until stopped manually\ntezpay continual [flags] Options -c, --cycle int initial cycle --dry-run skips payout …","ref":"/tezpay/reference/cmd/tezpay_continual/","tags":"","title":"tezpay_continual"},{"body":"docs/cmd/tezpay_generate-payouts.md## tezpay generate-payouts\ngenerate payouts\nSynopsis generates payouts without further processing\ntezpay generate-payouts [flags] Options -c, --cycle int cycle to generate payouts for -h, --help help for generate-payouts --skip-balance-check skips payout wallet balance check --to-file string saves generated payouts to specified file Options inherited from parent commands --disable-donation-prompt Disable donation prompt -l, --log-level string Sets log level format (trace/debug/info/warn/error) (default \"info\") --log-server string launches log server at specified address -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string path to working directory (default \".\") --pay-only-address-prefix string Pays only to addresses starting with the prefix (e.g. KT, usually you do not want to use this, just for recovering in case of issues) --signer string Override signer --skip-version-check Skip version check SEE ALSO tezpay\t- TEZPAY Auto generated by spf13/cobra on 7-Sep-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezpay_generate-payouts.md## tezpay generate-payouts\ngenerate payouts\nSynopsis generates payouts without further processing\ntezpay generate-payouts [flags] Options -c, --cycle int cycle to …","ref":"/tezpay/reference/cmd/tezpay_generate-payouts/","tags":"","title":"tezpay_generate-payouts"},{"body":"docs/cmd/tezpay_import-configuration.md## tezpay import-configuration\nseed configuration from\nSynopsis Generates configuration based on configuration from others payout distribution tools.\nCurrently supported sources are: trd, bc To import configuration from supported sources copy configuration file to directory where you plan to store tezpay configuration and run command with source file path as argument. Example: tezpay import-configuration bc ./bc.json tezpay import-configuration trd ./trd.yaml tezpay import-configuration \u003ckind\u003e \u003csource-file\u003e [flags] Options -h, --help help for import-configuration Options inherited from parent commands --disable-donation-prompt Disable donation prompt -l, --log-level string Sets log level format (trace/debug/info/warn/error) (default \"info\") --log-server string launches log server at specified address -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string path to working directory (default \".\") --pay-only-address-prefix string Pays only to addresses starting with the prefix (e.g. KT, usually you do not want to use this, just for recovering in case of issues) --signer string Override signer --skip-version-check Skip version check SEE ALSO tezpay\t- TEZPAY Auto generated by spf13/cobra on 7-Sep-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezpay_import-configuration.md## tezpay import-configuration\nseed configuration from\nSynopsis Generates configuration based on configuration from others payout distribution tools.\nCurrently …","ref":"/tezpay/reference/cmd/tezpay_import-configuration/","tags":"","title":"tezpay_import-configuration"},{"body":"docs/cmd/tezpay_pay.md## tezpay pay\nmanual payout\nSynopsis runs manual payout\ntezpay pay [flags] Options --confirm automatically confirms generated payouts -c, --cycle int cycle to generate payouts for --dry-run skips payout wallet balance check --from-file string loads payouts from file instead of generating on the fly --from-stdin loads payouts from stdin instead of generating on the fly -h, --help help for pay --no-separate-fa disables fa transfers separation (mixes txs and fa transfers within batches) --no-separate-sc disables smart contract separation (mixes txs and smart contract calls within batches) --notificator string Notify through specific notificator --report-to-stdout prints them to stdout (wont write to file) -s, --silent suppresses notifications --skip-balance-check skips payout wallet balance check Options inherited from parent commands --disable-donation-prompt Disable donation prompt -l, --log-level string Sets log level format (trace/debug/info/warn/error) (default \"info\") --log-server string launches log server at specified address -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string path to working directory (default \".\") --pay-only-address-prefix string Pays only to addresses starting with the prefix (e.g. KT, usually you do not want to use this, just for recovering in case of issues) --signer string Override signer --skip-version-check Skip version check SEE ALSO tezpay\t- TEZPAY Auto generated by spf13/cobra on 7-Sep-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezpay_pay.md## tezpay pay\nmanual payout\nSynopsis runs manual payout\ntezpay pay [flags] Options --confirm automatically confirms generated payouts -c, --cycle int cycle to generate payouts …","ref":"/tezpay/reference/cmd/tezpay_pay/","tags":"","title":"tezpay_pay"},{"body":"docs/cmd/tezpay_pay-date-range.md## tezpay pay-date-range\nEXPERIMENTAL: payout for date range\nSynopsis EXPERIMENTAL: runs payout for date range\ntezpay pay-date-range [flags] Options --confirm automatically confirms generated payouts --dry-run skips payout wallet balance check --end-date string end date for payout generation (format: 2024-02-01) -h, --help help for pay-date-range --month string month to generate payout for (format: 2024-02) --no-separate-fa disables fa transfers separation (mixes txs and fa transfers within batches) --no-separate-sc disables smart contract separation (mixes txs and smart contract calls within batches) --notificator string Notify through specific notificator --report-to-stdout prints them to stdout (wont write to file) -s, --silent suppresses notifications --skip-balance-check skips payout wallet balance check --start-date string start date for payout generation (format: 2024-02-01) Options inherited from parent commands --disable-donation-prompt Disable donation prompt -l, --log-level string Sets log level format (trace/debug/info/warn/error) (default \"info\") --log-server string launches log server at specified address -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string path to working directory (default \".\") --pay-only-address-prefix string Pays only to addresses starting with the prefix (e.g. KT, usually you do not want to use this, just for recovering in case of issues) --signer string Override signer --skip-version-check Skip version check SEE ALSO tezpay\t- TEZPAY Auto generated by spf13/cobra on 7-Sep-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezpay_pay-date-range.md## tezpay pay-date-range\nEXPERIMENTAL: payout for date range\nSynopsis EXPERIMENTAL: runs payout for date range\ntezpay pay-date-range [flags] Options --confirm …","ref":"/tezpay/reference/cmd/tezpay_pay-date-range/","tags":"","title":"tezpay_pay-date-range"},{"body":"docs/cmd/tezpay_statistics.md## tezpay statistics\nprints earning stats\nSynopsis prints out earning statiscs\ntezpay statistics [flags] Options --cycles int number of cycles to collect statistics from (default 10) -h, --help help for statistics --last-cycle int last cycle to collect statistics from (has priority over --cycles) Options inherited from parent commands --disable-donation-prompt Disable donation prompt -l, --log-level string Sets log level format (trace/debug/info/warn/error) (default \"info\") --log-server string launches log server at specified address -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string path to working directory (default \".\") --pay-only-address-prefix string Pays only to addresses starting with the prefix (e.g. KT, usually you do not want to use this, just for recovering in case of issues) --signer string Override signer --skip-version-check Skip version check SEE ALSO tezpay\t- TEZPAY Auto generated by spf13/cobra on 7-Sep-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezpay_statistics.md## tezpay statistics\nprints earning stats\nSynopsis prints out earning statiscs\ntezpay statistics [flags] Options --cycles int number of cycles to collect statistics from …","ref":"/tezpay/reference/cmd/tezpay_statistics/","tags":"","title":"tezpay_statistics"},{"body":"docs/cmd/tezpay_test-extension.md## tezpay test-extension\nextension test\nSynopsis initializes and executes test hook agains extensions\ntezpay test-extension [flags] Options -h, --help help for test-extension Options inherited from parent commands --disable-donation-prompt Disable donation prompt -l, --log-level string Sets log level format (trace/debug/info/warn/error) (default \"info\") --log-server string launches log server at specified address -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string path to working directory (default \".\") --pay-only-address-prefix string Pays only to addresses starting with the prefix (e.g. KT, usually you do not want to use this, just for recovering in case of issues) --signer string Override signer --skip-version-check Skip version check SEE ALSO tezpay\t- TEZPAY Auto generated by spf13/cobra on 20-Jul-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezpay_test-extension.md## tezpay test-extension\nextension test\nSynopsis initializes and executes test hook agains extensions\ntezpay test-extension [flags] Options -h, --help help for …","ref":"/tezpay/reference/cmd/tezpay_test-extension/","tags":"","title":"tezpay_test-extension"},{"body":"docs/cmd/tezpay_test-extensions.md## tezpay test-extensions\nextensions test\nSynopsis initializes and executes test hook agains extensions\ntezpay test-extensions [flags] Options -h, --help help for test-extensions Options inherited from parent commands --disable-donation-prompt Disable donation prompt -l, --log-level string Sets log level format (trace/debug/info/warn/error) (default \"info\") --log-server string launches log server at specified address -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string path to working directory (default \".\") --pay-only-address-prefix string Pays only to addresses starting with the prefix (e.g. KT, usually you do not want to use this, just for recovering in case of issues) --signer string Override signer --skip-version-check Skip version check SEE ALSO tezpay\t- TEZPAY Auto generated by spf13/cobra on 7-Sep-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezpay_test-extensions.md## tezpay test-extensions\nextensions test\nSynopsis initializes and executes test hook agains extensions\ntezpay test-extensions [flags] Options -h, --help help for …","ref":"/tezpay/reference/cmd/tezpay_test-extensions/","tags":"","title":"tezpay_test-extensions"},{"body":"docs/cmd/tezpay_test-notify.md## tezpay test-notify\nnotification test\nSynopsis sends test notification\ntezpay test-notify [flags] Options -h, --help help for test-notify --notificator string Notify through specific notificator Options inherited from parent commands --disable-donation-prompt Disable donation prompt -l, --log-level string Sets log level format (trace/debug/info/warn/error) (default \"info\") --log-server string launches log server at specified address -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string path to working directory (default \".\") --pay-only-address-prefix string Pays only to addresses starting with the prefix (e.g. KT, usually you do not want to use this, just for recovering in case of issues) --signer string Override signer --skip-version-check Skip version check SEE ALSO tezpay\t- TEZPAY Auto generated by spf13/cobra on 7-Sep-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezpay_test-notify.md## tezpay test-notify\nnotification test\nSynopsis sends test notification\ntezpay test-notify [flags] Options -h, --help help for test-notify --notificator string Notify …","ref":"/tezpay/reference/cmd/tezpay_test-notify/","tags":"","title":"tezpay_test-notify"},{"body":"docs/cmd/tezpay_transfer.md## tezpay transfer\ntransfers tez to specified address\nSynopsis transfers tez to specified address from payout wallet\ntezpay transfer \u003cdestination\u003e \u003camount tez\u003e [flags] Options --confirm automatically confirms transfer -h, --help help for transfer --mutez amount in mutez Options inherited from parent commands --disable-donation-prompt Disable donation prompt -l, --log-level string Sets log level format (trace/debug/info/warn/error) (default \"info\") --log-server string launches log server at specified address -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string path to working directory (default \".\") --pay-only-address-prefix string Pays only to addresses starting with the prefix (e.g. KT, usually you do not want to use this, just for recovering in case of issues) --signer string Override signer --skip-version-check Skip version check SEE ALSO tezpay\t- TEZPAY Auto generated by spf13/cobra on 7-Sep-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezpay_transfer.md## tezpay transfer\ntransfers tez to specified address\nSynopsis transfers tez to specified address from payout wallet\ntezpay transfer \u003cdestination\u003e \u003camount tez\u003e [flags] …","ref":"/tezpay/reference/cmd/tezpay_transfer/","tags":"","title":"tezpay_transfer"},{"body":"docs/cmd/tezpay_version.md## tezpay version\nprints tezpay version\nSynopsis generates payouts without further processing\ntezpay version [flags] Options -h, --help help for version Options inherited from parent commands --disable-donation-prompt Disable donation prompt -l, --log-level string Sets log level format (trace/debug/info/warn/error) (default \"info\") --log-server string launches log server at specified address -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string path to working directory (default \".\") --pay-only-address-prefix string Pays only to addresses starting with the prefix (e.g. KT, usually you do not want to use this, just for recovering in case of issues) --signer string Override signer --skip-version-check Skip version check SEE ALSO tezpay\t- TEZPAY Auto generated by spf13/cobra on 7-Sep-2024 ","categories":"","description":"","excerpt":"docs/cmd/tezpay_version.md## tezpay version\nprints tezpay version\nSynopsis generates payouts without further processing\ntezpay version [flags] Options -h, --help help for version Options inherited …","ref":"/tezpay/reference/cmd/tezpay_version/","tags":"","title":"tezpay_version"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/","tags":"","title":"Categories"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/","tags":"","title":"Tags"}]